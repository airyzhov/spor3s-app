const axios = require('axios');
require('dotenv').config({ path: 'env.local' });

const BASE_URL = 'https://fdaa313e8595.ngrok-free.app';

async function testNgrokAPI() {
  console.log('üî• –ë–´–°–¢–†–´–ô –¢–ï–°–¢ NGROK API');
  console.log('==========================');
  
  try {
    // 1. –¢–µ—Å—Ç AI API –Ω–∞–ø—Ä—è–º—É—é
    console.log('\nü§ñ –¢–µ—Å—Ç AI API...');
    const response = await axios.post(`${BASE_URL}/api/ai`, {
      message: '–º—É—Ö–æ–º–æ—Ä –Ω–∞ –º–µ—Å—è—Ü',
      source: 'telegram_bot',
      user_id: 'test-user-123',
      telegram_id: '123456789'
    }, {
      timeout: 30000,
      headers: {
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ –£–°–ü–ï–•! AI API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('ü§ñ –û—Ç–≤–µ—Ç:', response.data.response.substring(0, 150) + '...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–≥–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
    const hasCartTag = /\[add_to_cart:[\w-]+\]/.test(response.data.response);
    console.log('üõí –¢–µ–≥–∏ –∫–æ—Ä–∑–∏–Ω—ã:', hasCartTag ? '‚úÖ –ù–∞–π–¥–µ–Ω—ã' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    
    // 2. –¢–µ—Å—Ç init-user API
    console.log('\nüë§ –¢–µ—Å—Ç init-user API...');
    const initResponse = await axios.post(`${BASE_URL}/api/init-user`, {
      telegram_id: '123456789',
      source: 'telegram_bot'
    }, {
      timeout: 10000,
      headers: {
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ –£–°–ü–ï–•! Init-user API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('üë§ User ID:', initResponse.data.id);
    console.log('üì± Source:', initResponse.data.source);
    
    // 3. –¢–µ—Å—Ç AI Agent Control API
    console.log('\nüéõÔ∏è –¢–µ—Å—Ç AI Agent Control API...');
    const controlResponse = await axios.post(`${BASE_URL}/api/ai-agent-control`, {
      telegram_id: '123456789',
      action: 'start'
    }, {
      timeout: 10000,
      headers: {
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ –£–°–ü–ï–•! AI Agent Control API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('üéõÔ∏è Status:', controlResponse.data.message);
    
    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
    console.log('‚úÖ 3-–∫–∞–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
    
  } catch (error) {
    console.log('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    if (error.response) {
      console.log('üìä –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.log('üìÑ –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

testNgrokAPI();
