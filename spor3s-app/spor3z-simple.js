// –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è @web3grow
const { TelegramClient } = require('telegram');
const { StringSession } = require('telegram/sessions');
require('dotenv').config({ path: 'env.local' });

async function startSimpleHandler() {
  console.log('ü§ñ –ó–ê–ü–£–°–ö –ü–†–û–°–¢–û–ì–û –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê @WEB3GROW');
  console.log('==========================================');

  try {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    const client = new TelegramClient(
      new StringSession(process.env.TELEGRAM_SESSION_STRING),
      parseInt(process.env.TELEGRAM_API_ID),
      process.env.TELEGRAM_API_HASH
    );

    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...');
    await client.start();
    
    const me = await client.getMe();
    console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫: ${me.firstName} ${me.lastName || ''}`);
    console.log(`üÜî ID: ${me.id}`);
    console.log(`@username: ${me.username || '–Ω–µ—Ç'}`);

    // –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    let messageCount = 0;
    const messageHandler = async (update) => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (update.message && !update.message.out) {
          const message = update.message;
          messageCount++;
          
          console.log(`\nüì® –°–û–û–ë–©–ï–ù–ò–ï #${messageCount}`);
          console.log(`üë§ –û—Ç: ${message.senderId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
          console.log(`üìù –¢–µ–∫—Å—Ç: "${message.message || '[–Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞]'}"`);
          console.log(`üí¨ Chat ID: ${message.chatId || 'undefined'}`);
          console.log(`‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}`);
          
          // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
          if (message.message && message.message.trim()) {
            console.log(`\nü§ñ –û–¢–ü–†–ê–í–õ–Ø–ï–ú –û–¢–í–ï–¢...`);
            
            try {
              const response = `ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${message.message}"\n\n–í—Ä–µ–º—è: ${new Date().toLocaleString()}\n\n–≠—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç @web3grow!`;
              
              await client.sendMessage(message.chatId, {
                message: response
              });

              console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
            } catch (error) {
              console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error.message);
            }
          }
        }
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
      }
    };

    client.addEventHandler(messageHandler);

    console.log('\nüéØ –ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ—Ç–æ–≤!');
    console.log('üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ @web3grow –≤ Telegram');
    console.log('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    process.on('SIGINT', async () => {
      console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞...');
      await client.disconnect();
      process.exit(0);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
startSimpleHandler().catch(console.error); 