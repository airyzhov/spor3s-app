// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ session string
const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function addSessionString() {
  console.log('üîë –î–û–ë–ê–í–õ–ï–ù–ò–ï –ì–û–¢–û–í–û–ì–û SESSION STRING');
  console.log('=====================================');
  console.log();

  try {
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º session string
    const sessionString = await question('üìù –í—Å—Ç–∞–≤—å—Ç–µ –≥–æ—Ç–æ–≤—ã–π session string –¥–ª—è @spor3z: ');
    
    if (!sessionString || sessionString.trim() === '') {
      console.log('‚ùå Session string –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      return;
    }

    // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env.local
    let envContent = '';
    if (fs.existsSync('.env.local')) {
      envContent = fs.readFileSync('.env.local', 'utf8');
    }

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π TELEGRAM_SESSION_STRING –µ—Å–ª–∏ –µ—Å—Ç—å
    envContent = envContent.replace(/TELEGRAM_SESSION_STRING=.*\n?/g, '');

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π session string
    const newSessionLine = `TELEGRAM_SESSION_STRING=${sessionString.trim()}\n`;
    envContent += newSessionLine;

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
    fs.writeFileSync('.env.local', envContent);

    console.log('‚úÖ Session string –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env.local');
    console.log();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º session string
    console.log('üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º session string...');
    const { execSync } = require('child_process');
    try {
      execSync('node check-existing-session.js', { stdio: 'inherit' });
    } catch (error) {
      console.log('‚ùå Session string –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å.');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    rl.close();
  }
}

// –ó–∞–ø—É—Å–∫
addSessionString().catch(console.error);
