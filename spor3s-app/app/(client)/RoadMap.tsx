"use client";
import { useState, useEffect, useRef } from "react";
import MotivationalHabit from "../../components/MotivationalHabit";

interface Metrics {
  memory: number;
  sleep: number;
  energy: number;
  stress: number;
}

interface WeekProgress {
  week: number;
  date: string;
  metrics: Metrics;
  notes: string;
  achievements: string[];
  extraHabits: number;
}

interface RoadMapProps {
  user: any;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ SC
const levelRewards = [
  { level: 1, name: "üå± –ù–æ–≤–∏—á–æ–∫", scRequired: 0, reward: "–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º", description: "–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å. –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ AI –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É –∏ –±–∞–∑–æ–≤–æ–º—É –∫–∞—Ç–∞–ª–æ–≥—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤." },
  { level: 2, name: "üçÑ –ì—Ä–∏–±–Ω–∏–∫", scRequired: 20, reward: "–ë–æ–Ω—É—Å—ã –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞", description: "–î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –±–æ–Ω—É—Å–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º." },
  { level: 3, name: "üåø –°–æ–±–∏—Ä–∞—Ç–µ–ª—å", scRequired: 100, reward: "–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞", description: "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞." },
  { level: 4, name: "üå≥ –≠–∫—Å–ø–µ—Ä—Ç", scRequired: 300, reward: "–ó–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤", description: "–ó–∞–∫–∞–∑ –æ—Ç 5000‚ÇΩ - –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É —Å –¥—Ä—É–≥–∏–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏, —É—á–∞—Å—Ç–∏–µ –≤ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö." },
  { level: 5, name: "üëë –ú–∞—Å—Ç–µ—Ä", scRequired: 600, reward: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–±–æ—Ä—ã", description: "–ó–∞–∫–∞–∑ –æ—Ç 10000‚ÇΩ - 5% —Å–∫–∏–¥–∫–∞ –≤—Å–µ–≥–¥–∞, –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –Ω–∞–±–æ—Ä–∞–º –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫ (—Ç—Ä–∞–≤—ã, –±–ª–∞–≥–æ–≤–æ–Ω–∏—è, —á–∞–π)." },
  { level: 6, name: "üåü –õ–µ–≥–µ–Ω–¥–∞", scRequired: 1000, reward: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏", description: "–ó–∞–∫–∞–∑ –æ—Ç 20000‚ÇΩ - 10% —Å–∫–∏–¥–∫–∞ –≤—Å–µ–≥–¥–∞, –º–µ—Ä—á –æ—Ç –±—Ä–µ–Ω–¥–∞, –ª–∏—á–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏, –∂–∏–≤–æ–π —Ç—Ä–µ–∫–∏–Ω–≥." }
];

export default function RoadMap({ user }: RoadMapProps) {
  const [currentWeek, setCurrentWeek] = useState(1);
  const [startMetrics, setStartMetrics] = useState<Metrics>({ memory: 5, sleep: 4, energy: 3, stress: 7 });
  const [weeklyProgress, setWeeklyProgress] = useState<WeekProgress[]>([]);
  const [showStartAssessment, setShowStartAssessment] = useState(true);
  const [todayMetrics, setTodayMetrics] = useState<Metrics>({ memory: 5, sleep: 5, energy: 5, stress: 5 });
  const [weeklyObservations, setWeeklyObservations] = useState("");
  const [currentSC, setCurrentSC] = useState(0);
  const [referralSC, setReferralSC] = useState(0);

  const [subscribeLoading, setSubscribeLoading] = useState<string | null>(null);
  const [subscribeSuccess, setSubscribeSuccess] = useState<string | null>(null);
  const [showHistoryModal, setShowHistoryModal] = useState(false);
  const [showLevels, setShowLevels] = useState(false);
  
  // –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫—É—Ä—Å–∞ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
  const [courseStarted, setCourseStarted] = useState(false);
  const [courseDuration, setCourseDuration] = useState<number | null>(null);
  const [courseStartDate, setCourseStartDate] = useState<string | null>(null);
  const [startCourseLoading, setStartCourseLoading] = useState(false);
  const [referralStats, setReferralStats] = useState<any>(null);
  const [showReferralModal, setShowReferralModal] = useState(false);
  const [referralCode, setReferralCode] = useState("");
  const [referralBonus, setReferralBonus] = useState(0);
  const [invitedCount, setInvitedCount] = useState(0);

  // –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  useEffect(() => {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–µ–ª—å
    const mockProgress: WeekProgress[] = [
      {
        week: 1,
        date: "2024-01-01",
        metrics: { memory: 5, sleep: 5, energy: 4, stress: 6 },
        notes: "–ù–∞—á–∞–ª –ø—Ä–∏–µ–º –º—É—Ö–æ–º–æ—Ä–∞. –õ—ë–≥–∫–æ–µ –ø–æ–∫–∞–ª—ã–≤–∞–Ω–∏–µ –≤ –ø–µ—Ä–≤—ã–µ –¥–Ω–∏.",
        achievements: ["–ü–µ—Ä–≤—ã–π –¥–µ–Ω—å", "–ù–µ–¥–µ–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏"],
        extraHabits: 12
      },
      {
        week: 2,
        date: "2024-01-08", 
        metrics: { memory: 6, sleep: 6, energy: 5, stress: 5 },
        notes: "–°–æ–Ω —Å—Ç–∞–ª –Ω–µ–º–Ω–æ–≥–æ –ª—É—á—à–µ. –ú–µ–Ω—å—à–µ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏.",
        achievements: ["7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥"],
        extraHabits: 18
      },
      {
        week: 3,
        date: "2024-01-15",
        metrics: { memory: 7, sleep: 7, energy: 6, stress: 4 },
        notes: "–ó–∞–º–µ—Ç–∏–ª —É–ª—É—á—à–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ!",
        achievements: ["–ü–µ—Ä–≤—ã–µ —Ä–æ—Å—Ç–∫–∏", "–ú—É–¥—Ä–µ—Ü"],
        extraHabits: 25
      }
    ];
    setWeeklyProgress(mockProgress);
    setCurrentWeek(4);
    if (mockProgress.length > 0) {
      setShowStartAssessment(false);
    }
  }, []);

  const handleStartAssessment = () => {
    setShowStartAssessment(false);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å startMetrics –≤ API
  };

  const saveWeeklyProgress = () => {
    const newProgress: WeekProgress = {
      week: currentWeek,
      date: new Date().toISOString().split('T')[0],
      metrics: todayMetrics,
      notes: weeklyObservations,
      achievements: ["–ê–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∏–±–Ω–∏–∫"],
      extraHabits: 0 // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å—á–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫
    };
    setWeeklyProgress([...weeklyProgress, newProgress]);
    setCurrentWeek(currentWeek + 1);
    setWeeklyObservations(""); // Reset observations after saving
  };

  const getProgressPhase = (week: number) => {
    if (week <= 4) return { name: "üå± –ê–¥–∞–ø—Ç–∞—Ü–∏—è", color: "#4ade80" };
    if (week <= 8) return { name: "üçÑ –ü–µ—Ä–≤—ã–µ —Ä–æ—Å—Ç–∫–∏", color: "#f97316" };
    if (week <= 12) return { name: "üåø –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –≥—Ä–∏–±–Ω–∏—Ü—ã", color: "#8b5cf6" };
    return { name: "üëë –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ", color: "#fbbf24" };
  };

  const calculateImprovement = (metric: keyof Metrics) => {
    if (weeklyProgress.length === 0) return 0;
    const latest = weeklyProgress[weeklyProgress.length - 1].metrics[metric];
    const first = weeklyProgress[0].metrics[metric];
    return latest - first;
  };

  const getCurrentLevel = () => {
    for (let i = levelRewards.length - 1; i >= 0; i--) {
      if (currentSC >= levelRewards[i].scRequired) {
        return levelRewards[i];
      }
    }
    return levelRewards[0];
  };

  const getNextLevel = () => {
    const current = getCurrentLevel();
    const nextIndex = levelRewards.findIndex(level => level.level === current.level) + 1;
    return nextIndex < levelRewards.length ? levelRewards[nextIndex] : null;
  };

  const currentLevel = getCurrentLevel();
  const nextLevel = getNextLevel();
  const progressToNext = nextLevel ? ((currentSC - currentLevel.scRequired) / (nextLevel.scRequired - currentLevel.scRequired)) * 100 : 0;

  const handleSubscribe = async (channelType: 'telegram' | 'youtube') => {
    if (!user?.id) return;
    
    setSubscribeLoading(channelType);
    try {
      const response = await fetch('/api/subscribe-bonus', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ user_id: user.id, channel_type: channelType })
      });
      
      const data = await response.json();
      
      if (data.success) {
        setSubscribeSuccess(channelType);
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å SC
        setCurrentSC(prev => prev + data.bonus);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        const notification = document.createElement('div');
        notification.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          background: linear-gradient(45deg, #10b981, #059669);
          color: white;
          padding: 20px 25px;
          border-radius: 15px;
          font-weight: 600;
          z-index: 10000;
          box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
          animation: slideInRight 0.4s ease-out;
          max-width: 350px;
          font-size: 16px;
        `;
        notification.innerHTML = `
          <div style="display: flex; align-items: center; gap: 12px;">
            <div style="font-size: 24px;">üéâ</div>
            <div>
              <div style="font-weight: 700; margin-bottom: 4px;">–ë–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω!</div>
              <div style="font-size: 14px; opacity: 0.9;">+${data.bonus} SC –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ ${channelType === 'telegram' ? 'Telegram' : 'YouTube'}</div>
            </div>
          </div>
        `;
        document.body.appendChild(notification);
        
        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          notification.style.animation = 'slideOutRight 0.4s ease-out';
          setTimeout(() => {
            if (notification.parentNode) {
              notification.parentNode.removeChild(notification);
            }
          }, 400);
        }, 4000);
        
      } else {
        // –ï—Å–ª–∏ –±–æ–Ω—É—Å —É–∂–µ –ø–æ–ª—É—á–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (data.error && data.error.includes('—É–∂–µ –ø–æ–ª—É—á–µ–Ω')) {
          setSubscribeSuccess(channelType);
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        const errorNotification = document.createElement('div');
        errorNotification.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          background: linear-gradient(45deg, #ef4444, #dc2626);
          color: white;
          padding: 20px 25px;
          border-radius: 15px;
          font-weight: 600;
          z-index: 10000;
          box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);
          animation: slideInRight 0.4s ease-out;
          max-width: 350px;
          font-size: 16px;
        `;
        errorNotification.innerHTML = `
          <div style="display: flex; align-items: center; gap: 12px;">
            <div style="font-size: 24px;">‚ö†Ô∏è</div>
            <div>
              <div style="font-weight: 700; margin-bottom: 4px;">–û—à–∏–±–∫–∞</div>
              <div style="font-size: 14px; opacity: 0.9;">${data.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å'}</div>
            </div>
          </div>
        `;
        document.body.appendChild(errorNotification);
        
        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          errorNotification.style.animation = 'slideOutRight 0.4s ease-out';
          setTimeout(() => {
            if (errorNotification.parentNode) {
              errorNotification.parentNode.removeChild(errorNotification);
            }
          }, 400);
        }, 4000);
      }
    } catch (error) {
      console.error('Subscribe error:', error);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å–µ—Ç–∏
      const networkErrorNotification = document.createElement('div');
      networkErrorNotification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, #f59e0b, #d97706);
        color: white;
        padding: 20px 25px;
        border-radius: 15px;
        font-weight: 600;
        z-index: 10000;
        box-shadow: 0 8px 25px rgba(245, 158, 11, 0.3);
        animation: slideInRight 0.4s ease-out;
        max-width: 350px;
        font-size: 16px;
      `;
      networkErrorNotification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 12px;">
          <div style="font-size: 24px;">üåê</div>
          <div>
            <div style="font-weight: 700; margin-bottom: 4px;">–û—à–∏–±–∫–∞ —Å–µ—Ç–∏</div>
            <div style="font-size: 14px; opacity: 0.9;">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É</div>
          </div>
        </div>
      `;
      document.body.appendChild(networkErrorNotification);
      
      // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        networkErrorNotification.style.animation = 'slideOutRight 0.4s ease-out';
        setTimeout(() => {
          if (networkErrorNotification.parentNode) {
            networkErrorNotification.parentNode.removeChild(networkErrorNotification);
          }
        }, 400);
      }, 4000);
    } finally {
      setSubscribeLoading(null);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞
  const handleStartCourse = async (duration: number) => {
    if (!user?.id) return;
    
    setStartCourseLoading(true);
    try {
      const response = await fetch('/api/start-course', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
          user_id: user.id, 
          course_duration: duration.toString() 
        })
      });
      
      const data = await response.json();
      
      if (data.success) {
        setCourseStarted(true);
        setCourseDuration(duration);
        setCourseStartDate(new Date().toISOString());
        alert(data.message);
      } else {
        if (data.requiresOrder) {
          alert('–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É.');
        } else {
          alert(data.error || '–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞');
        }
      }
    } catch (error) {
      console.error('Start course error:', error);
      alert('–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞');
    } finally {
      setStartCourseLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const fetchReferralStats = async () => {
    if (!user?.id) return;
    
    try {
      const response = await fetch(`/api/referral-stats?user_id=${user.id}`);
      const data = await response.json();
      
      if (data.success) {
        setReferralStats(data.stats);
        setReferralCode(data.stats.referralCode);
        setReferralBonus(data.stats.cashbackAmount);
        setInvitedCount(data.stats.totalReferrals);
      }
    } catch (error) {
      console.error('Fetch referral stats error:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
  const copyReferralCode = () => {
    if (referralCode) {
      navigator.clipboard.writeText(referralCode);
      alert('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–∂–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ –ø–æ–¥–ø–∏—Å–∫–∏
  const checkSubscriptionBonuses = async () => {
    if (!user?.id) return;
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –ø–æ–¥–ø–∏—Å–∫—É
      const telegramResponse = await fetch('/api/check-subscription-status', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ user_id: user.id, channel_type: 'telegram' })
      });
      
      if (telegramResponse.ok) {
        const telegramData = await telegramResponse.json();
        if (telegramData.hasReceivedBonus) {
          setSubscribeSuccess('telegram');
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º YouTube –ø–æ–¥–ø–∏—Å–∫—É
      const youtubeResponse = await fetch('/api/check-subscription-status', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ user_id: user.id, channel_type: 'youtube' })
      });
      
      if (youtubeResponse.ok) {
        const youtubeData = await youtubeResponse.json();
        if (youtubeData.hasReceivedBonus) {
          setSubscribeSuccess('youtube');
        }
      }
    } catch (error) {
      console.error('Check subscription bonuses error:', error);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (user?.id) {
      fetchReferralStats();
      checkSubscriptionBonuses();
    }
  }, [user?.id]);

  if (showStartAssessment) {
    return (
      <div style={{ 
        maxWidth: "800px", 
        margin: "0 auto", 
        padding: "20px",
        color: "#fff"
      }}>
        <div style={{
          background: "linear-gradient(135deg, #0f172a, #1e293b)",
          borderRadius: "20px",
          padding: "30px",
          border: "2px solid rgba(255, 255, 255, 0.1)",
          boxShadow: "0 8px 32px rgba(0, 0, 0, 0.3)"
        }}>
          <h2 style={{ textAlign: "center", color: "#fff", fontSize: "24px", marginBottom: "30px" }}>
            üìä –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å
          </h2>
          
          <div style={{ color: "#fff", marginBottom: "30px" }}>
            <h3 style={{ color: "#ff00cc", marginBottom: "20px" }}>üìã –¢–æ—á–∫–∞ –ê - –û—Ç–∫—É–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º?</h3>
            <p style={{ color: "#ccc", marginBottom: "20px" }}>
              –û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10:
            </p>
            
            {Object.entries(startMetrics).map(([key, value]) => (
              <div key={key} style={{ marginBottom: "20px" }}>
                <label style={{ 
                  display: "block", 
                  marginBottom: "8px", 
                  fontSize: "16px",
                  color: "#fff"
                }}>
                  {key === 'memory' && 'üß† –ü–∞–º—è—Ç—å –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è'}
                  {key === 'sleep' && 'üò¥ –ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞'}
                  {key === 'energy' && '‚ö° –£—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏'}
                  {key === 'stress' && 'üòå –°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å'}
                </label>
                <div style={{ display: "flex", gap: "10px", alignItems: "center" }}>
                  <input
                    type="range"
                    min="1"
                    max="10"
                    value={value}
                    onChange={(e) => setStartMetrics({
                      ...startMetrics,
                      [key]: parseInt(e.target.value)
                    })}
                    style={{ flex: 1, height: "8px" }}
                  />
                  <span style={{ 
                    background: value > 7 ? "#10b981" : value > 4 ? "#f59e0b" : "#ef4444",
                    color: "white",
                    padding: "4px 12px",
                    borderRadius: "12px",
                    fontWeight: "bold",
                    minWidth: "40px",
                    textAlign: "center"
                  }}>
                    {value}
                  </span>
                </div>
              </div>
            ))}
          </div>

          <button
            onClick={handleStartAssessment}
            style={{
              background: "linear-gradient(45deg, #ff00cc, #3333ff)",
              color: "white",
              border: "none",
              borderRadius: "12px",
              padding: "15px 30px",
              fontSize: "18px",
              fontWeight: "bold",
              cursor: "pointer",
              width: "100%",
              transition: "transform 0.2s"
            }}
            onMouseOver={(e) => e.currentTarget.style.transform = "scale(1.02)"}
            onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
          >
            üöÄ –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ
          </button>
        </div>
      </div>
    );
  }

  return (
    <div style={{ 
      maxWidth: "1000px", 
      margin: "0 auto", 
      padding: "clamp(10px, 3vw, 20px)",
      overflowX: "hidden",
      width: "100%",
      boxSizing: "border-box"
    }}>
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ - –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è */}
      <div style={{
        background: "linear-gradient(135deg, rgba(255, 0, 204, 0.1), rgba(51, 51, 255, 0.1))",
        borderRadius: 16,
        padding: "clamp(15px, 4vw, 20px)",
        marginBottom: 25,
        border: "2px solid #ff00cc",
        textAlign: "center",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <div style={{ 
          fontSize: "clamp(12px, 3vw, 14px)", 
          color: "#ccc",
          marginBottom: 10,
          fontFamily: "monospace",
          wordBreak: "break-word"
        }}>
          ID: {user?.telegram_username || user?.telegram_id || (user?.id ? user.id.slice(0, 8) + '...' + user.id.slice(-4) : 'Loading...')}
        </div>
        
        {/* –ö–æ–º–ø–∞–∫—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–∏–Ω–æ–≤ */}
        <div style={{
          display: "flex",
          gap: "clamp(10px, 2vw, 15px)",
          justifyContent: "center",
          flexWrap: "wrap",
          marginTop: "10px",
          width: "100%"
        }}>
          <div style={{ 
            background: "linear-gradient(45deg, #ff00cc, #3333ff)",
            color: "white",
            padding: "clamp(8px, 2vw, 10px) clamp(15px, 3vw, 20px)",
            borderRadius: "15px",
            fontSize: "clamp(14px, 3.5vw, 18px)",
            fontWeight: "bold",
            display: "inline-block",
            whiteSpace: "nowrap"
          }}>
            üí∞ {currentSC} SC
          </div>
          <div style={{ 
            background: "linear-gradient(45deg, #10b981, #059669)",
            color: "white",
            padding: "clamp(8px, 2vw, 10px) clamp(15px, 3vw, 20px)",
            borderRadius: "15px",
            fontSize: "clamp(14px, 3.5vw, 18px)",
            fontWeight: "bold",
            display: "inline-block",
            whiteSpace: "nowrap"
          }}>
            üéÅ {referralSC} –†–µ—Ñ.
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—á–∞–ª–µ –∫—É—Ä—Å–∞ */}
      <div style={{
        background: "linear-gradient(135deg, rgba(255, 193, 7, 0.1), rgba(255, 152, 0, 0.1))",
        borderRadius: "20px",
        padding: "clamp(20px, 5vw, 25px)",
        marginBottom: "30px",
        border: "2px solid #ffc107",
        textAlign: "center",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <div style={{
          fontSize: "clamp(18px, 4.5vw, 20px)",
          fontWeight: "bold",
          color: "#ffc107",
          marginBottom: "15px",
          wordBreak: "break-word"
        }}>
          üìÖ –ù–∞—á–∞–ª–æ –∫—É—Ä—Å–∞
        </div>
        <div style={{
          color: "#fff",
          fontSize: "clamp(14px, 3.5vw, 16px)",
          lineHeight: "1.5",
          marginBottom: "20px",
          wordBreak: "break-word"
        }}>
          –ß—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤–∫–ª—é—á–∏—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤ 1 –¥–µ–Ω—å –ø—Ä–∏–µ–º–∞ –∫—É—Ä—Å–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é 1, 3 –∏–ª–∏ 6 –º–µ—Å—è—Ü–µ–≤
        </div>
        
        {!courseStarted ? (
          <div style={{
            display: "flex",
            gap: "10px",
            justifyContent: "center",
            flexWrap: "wrap",
            width: "100%"
          }}>
            {[1, 3, 6].map((duration) => (
              <button
                key={duration}
                onClick={() => handleStartCourse(duration)}
                disabled={startCourseLoading}
                style={{
                  background: startCourseLoading 
                    ? "rgba(255, 255, 255, 0.3)" 
                    : "linear-gradient(45deg, #ffc107, #ff9800)",
                  color: "white",
                  border: "none",
                  borderRadius: "12px",
                  padding: "clamp(10px, 2.5vw, 12px) clamp(15px, 3.5vw, 20px)",
                  fontSize: "clamp(14px, 3.5vw, 16px)",
                  fontWeight: "bold",
                  cursor: startCourseLoading ? "not-allowed" : "pointer",
                  transition: "transform 0.2s",
                  opacity: startCourseLoading ? 0.6 : 1,
                  whiteSpace: "nowrap"
                }}
                onMouseOver={(e) => {
                  if (!startCourseLoading) {
                    e.currentTarget.style.transform = "scale(1.05)";
                  }
                }}
                onMouseOut={(e) => {
                  e.currentTarget.style.transform = "scale(1)";
                }}
              >
                {startCourseLoading ? "‚è≥" : `${duration} –º–µ—Å.`}
              </button>
            ))}
          </div>
        ) : (
          <div style={{
            background: "rgba(255, 255, 255, 0.1)",
            borderRadius: "12px",
            padding: "15px",
            marginTop: "15px",
            width: "100%",
            boxSizing: "border-box"
          }}>
            <div style={{ fontSize: "clamp(12px, 3vw, 14px)", color: "#ffc107", fontWeight: "bold", marginBottom: "8px" }}>
              ‚úÖ –ö—É—Ä—Å –Ω–∞—á–∞—Ç
            </div>
            <div style={{ fontSize: "clamp(10px, 2.5vw, 12px)", color: "#fff" }}>
              –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {courseDuration} –º–µ—Å—è—Ü(–µ–≤)
              {courseStartDate && (
                <div style={{ marginTop: "5px", fontSize: "clamp(9px, 2.5vw, 11px)", color: "#ccc" }}>
                  –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {new Date(courseStartDate).toLocaleDateString()}
                </div>
              )}
            </div>
          </div>
        )}
      </div>

      {/* –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ */}
      <div style={{
        background: "linear-gradient(135deg, rgba(255, 0, 204, 0.1), rgba(51, 51, 255, 0.1))",
        borderRadius: "20px",
        padding: "clamp(20px, 5vw, 25px)",
        marginBottom: "30px",
        border: "2px solid #ff00cc",
        textAlign: "center",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <div style={{
          fontSize: "clamp(18px, 4.5vw, 20px)",
          fontWeight: "bold",
          color: "#ff00cc",
          marginBottom: "15px",
          wordBreak: "break-word"
        }}>
          üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
        </div>
        <div style={{
          color: "#fff",
          fontSize: "clamp(14px, 3.5vw, 16px)",
          lineHeight: "1.5",
          marginBottom: "20px",
          wordBreak: "break-word"
        }}>
          –ü–æ–ª—É—á–∞–π 5% –æ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥—Ä—É–∑–µ–π, –æ–Ω–∏ –ø–æ–ª—É—á–∞—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ 100SC
        </div>
        
        {referralCode && (
          <div style={{
            background: "rgba(255, 255, 255, 0.1)",
            borderRadius: "12px",
            padding: "15px",
            marginBottom: "15px",
            width: "100%",
            boxSizing: "border-box"
          }}>
            <div style={{ fontSize: "clamp(12px, 3vw, 14px)", color: "#fff", marginBottom: "10px" }}>
              –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥:
            </div>
            <div style={{
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              gap: "10px",
              flexWrap: "wrap"
            }}>
              <div style={{
                background: "rgba(255, 255, 255, 0.2)",
                padding: "8px 15px",
                borderRadius: "8px",
                fontSize: "clamp(14px, 3.5vw, 16px)",
                fontWeight: "bold",
                color: "#ff00cc",
                fontFamily: "monospace",
                wordBreak: "break-all"
              }}>
                {referralCode}
              </div>
              <button
                onClick={copyReferralCode}
                style={{
                  background: "#ff00cc",
                  color: "white",
                  border: "none",
                  borderRadius: "8px",
                  padding: "8px 12px",
                  fontSize: "clamp(12px, 3vw, 14px)",
                  cursor: "pointer",
                  transition: "transform 0.2s",
                  whiteSpace: "nowrap"
                }}
                onMouseOver={(e) => e.currentTarget.style.transform = "scale(1.05)"}
                onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
              >
                üìã
              </button>
            </div>
          </div>
        )}
        
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ */}
        {referralStats && (
          <div style={{
            display: "grid",
            gridTemplateColumns: "repeat(auto-fit, minmax(120px, 1fr))",
            gap: "10px",
            marginTop: "15px",
            width: "100%"
          }}>
            <div style={{
              background: "rgba(255, 255, 255, 0.1)",
              borderRadius: "8px",
              padding: "10px",
              textAlign: "center",
              boxSizing: "border-box"
            }}>
              <div style={{ fontSize: "clamp(10px, 2.5vw, 12px)", color: "#ccc", marginBottom: "5px" }}>
                –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ
              </div>
              <div style={{ fontSize: "clamp(16px, 4vw, 18px)", fontWeight: "bold", color: "#ff00cc" }}>
                {invitedCount}
              </div>
            </div>
            
            <div style={{
              background: "rgba(255, 255, 255, 0.1)",
              borderRadius: "8px",
              padding: "10px",
              textAlign: "center",
              boxSizing: "border-box"
            }}>
              <div style={{ fontSize: "clamp(10px, 2.5vw, 12px)", color: "#ccc", marginBottom: "5px" }}>
                –ö–µ—à–±–µ–∫
              </div>
              <div style={{ fontSize: "clamp(16px, 4vw, 18px)", fontWeight: "bold", color: "#10b981" }}>
                {referralBonus}‚ÇΩ
              </div>
            </div>
          </div>
        )}
      </div>

      {/* –ì—Ä–∏–± –º—É—Ö–æ–º–æ—Ä —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º */}
      <div style={{
        background: "linear-gradient(135deg, rgba(255, 0, 204, 0.1), rgba(51, 51, 255, 0.1))",
        borderRadius: "20px",
        padding: "clamp(25px, 6vw, 30px)",
        marginBottom: "30px",
        border: "2px solid rgba(255, 255, 255, 0.2)",
        textAlign: "center",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <div style={{
          fontSize: "clamp(60px, 15vw, 80px)",
          marginBottom: "20px",
          cursor: "pointer",
          transition: "transform 0.3s ease",
          filter: "drop-shadow(0 4px 8px rgba(0,0,0,0.3))"
        }}
        onClick={() => {
          alert("üçÑ –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–µ–º –∫—É—Ä—Å–∞, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞!");
        }}
        onMouseOver={(e) => {
          e.currentTarget.style.transform = "scale(1.1)";
        }}
        onMouseOut={(e) => {
          e.currentTarget.style.transform = "scale(1)";
        }}
        title="–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
        >
          üçÑ
        </div>

        <div style={{
          color: "#ccc",
          fontSize: "clamp(12px, 3vw, 14px)",
          lineHeight: "1.5",
          wordBreak: "break-word"
        }}>
          –û—Ç–º–µ—Ç—å —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–Ω—è–ª –¥–æ–±–∞–≤–∫–∏ ‚Üí +3 SC
        </div>
      </div>

      {/* Enhanced Motivational Habit Component */}
      {user?.id && (
        <MotivationalHabit 
          userId={user.id} 
          onSCUpdate={(newSC) => setCurrentSC(prev => prev + newSC)}
        />
      )}

      {/* –£—Ä–æ–≤–Ω–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–π */}
      <div style={{
        background: "linear-gradient(135deg, #0f172a, #1e293b)",
        borderRadius: "20px",
        padding: "clamp(15px, 4vw, 20px)",
        marginBottom: "30px",
        border: "2px solid rgba(255, 255, 255, 0.1)",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <div style={{ 
          display: "flex", 
          justifyContent: "space-between", 
          alignItems: "center", 
          marginBottom: "15px",
          cursor: "pointer",
          width: "100%",
          flexWrap: "wrap",
          gap: "10px"
        }}
        onClick={() => setShowLevels(!showLevels)}
        >
          <h3 style={{ 
            color: "#fff", 
            fontSize: "clamp(16px, 4vw, 18px)", 
            margin: 0,
            flex: "1",
            minWidth: "200px"
          }}>
            üéØ –£—Ä–æ–≤–Ω–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã
          </h3>
          <div style={{ 
            fontSize: "clamp(16px, 4vw, 20px)", 
            color: "#fff",
            transition: "transform 0.3s",
            transform: showLevels ? "rotate(180deg)" : "rotate(0deg)",
            flex: "0 0 auto"
          }}>
            ‚ñº
          </div>
        </div>
        
        {/* –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å - –∫—Ä—É–ø–Ω–æ–µ –ø–æ–ª–µ –≤ –Ω–∞—á–∞–ª–µ */}
        <div style={{
          background: "rgba(255, 0, 204, 0.2)",
          borderRadius: "15px",
          padding: "clamp(20px, 5vw, 25px)",
          marginBottom: "20px",
          border: "2px solid #ff00cc",
          textAlign: "center",
          width: "100%",
          boxSizing: "border-box",
          overflow: "hidden"
        }}>
          <div style={{ 
            fontSize: "clamp(20px, 5vw, 28px)", 
            fontWeight: "bold", 
            color: "#ff00cc", 
            marginBottom: "10px",
            wordBreak: "break-word"
          }}>
            {currentLevel.name}
          </div>
          <div style={{ 
            fontSize: "clamp(14px, 3.5vw, 18px)", 
            color: "#fff", 
            marginBottom: "15px",
            wordBreak: "break-word"
          }}>
            {currentLevel.reward}
          </div>
          <div style={{ 
            fontSize: "clamp(12px, 3vw, 16px)", 
            color: "#ccc", 
            marginBottom: "15px",
            lineHeight: "1.4",
            wordBreak: "break-word"
          }}>
            {currentLevel.description}
          </div>
          <div style={{ 
            fontSize: "clamp(12px, 3vw, 14px)", 
            color: "#fff", 
            marginBottom: "10px",
            wordBreak: "break-word"
          }}>
            {currentSC} / {nextLevel ? nextLevel.scRequired : currentLevel.scRequired} SC
          </div>
          {nextLevel && (
            <div style={{
              background: "rgba(255, 255, 255, 0.2)",
              borderRadius: "10px",
              height: "10px",
              overflow: "hidden",
              marginBottom: "10px",
              width: "100%",
              maxWidth: "300px",
              margin: "0 auto 10px auto"
            }}>
              <div style={{
                background: "linear-gradient(90deg, #ff00cc, #3333ff)",
                height: "100%",
                width: `${Math.min(progressToNext, 100)}%`,
                transition: "width 0.3s ease"
              }} />
            </div>
          )}
          {nextLevel && (
            <div style={{ 
              fontSize: "clamp(10px, 2.5vw, 12px)", 
              color: "#ccc",
              wordBreak: "break-word"
            }}>
              –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: {nextLevel.scRequired - currentSC} SC
            </div>
          )}
        </div>

        {/* –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å - –µ—Å–ª–∏ –µ—Å—Ç—å */}
        {nextLevel && (
          <div style={{
            display: "grid",
            gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
            gap: "15px",
            justifyContent: "center",
            width: "100%"
          }}>
            <div style={{
              background: "rgba(255, 255, 255, 0.05)",
              borderRadius: "12px",
              padding: "15px",
              border: "2px solid rgba(255, 255, 255, 0.1)",
              opacity: 0.6,
              maxWidth: "400px",
              margin: "0 auto",
              width: "100%",
              boxSizing: "border-box",
              overflow: "hidden"
            }}>
              <div style={{
                display: "flex",
                justifyContent: "space-between",
                alignItems: "center",
                marginBottom: "8px",
                flexWrap: "wrap",
                gap: "5px"
              }}>
                <div style={{ 
                  fontSize: "clamp(12px, 3.5vw, 14px)", 
                  fontWeight: "bold", 
                  color: "#fff",
                  wordBreak: "break-word"
                }}>
                  {nextLevel.name}
                </div>
                <div style={{ 
                  fontSize: "clamp(10px, 2.5vw, 11px)", 
                  color: "#ccc",
                  fontWeight: "bold",
                  whiteSpace: "nowrap"
                }}>
                  {nextLevel.scRequired} SC
                </div>
              </div>
              <div style={{ 
                fontSize: "clamp(10px, 2.5vw, 11px)", 
                color: "#ffffff",
                lineHeight: "1.3",
                marginBottom: "6px",
                wordBreak: "break-word",
                textShadow: "0 1px 2px rgba(0,0,0,0.3)"
              }}>
                {nextLevel.reward}
              </div>
              <div style={{ 
                fontSize: "clamp(8px, 2vw, 9px)", 
                color: "#ffffff",
                lineHeight: "1.2",
                wordBreak: "break-word",
                textShadow: "0 1px 2px rgba(0,0,0,0.3)"
              }}>
                {nextLevel.description}
              </div>
            </div>
          </div>
        )}
        
        {/* –ü—Ä–∏ —Ä–∞—Å–∫—Ä—ã—Ç–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —É—Ä–æ–≤–Ω–∏ (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–π) */}
        {showLevels && (
          <>
            {/* –°–µ—Ç–∫–∞ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ —É—Ä–æ–≤–Ω–µ–π (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–π) */}
            <div style={{
              display: "grid",
              gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
              gap: "15px",
              marginTop: "20px",
              justifyContent: "center",
              width: "100%"
            }}>
              {levelRewards
                .filter(level => level.level !== currentLevel.level && level.level !== nextLevel?.level)
                .map((level, index) => (
                <div key={level.level} style={{
                  background: currentLevel.level >= level.level 
                    ? "rgba(255, 0, 204, 0.2)" 
                    : "rgba(255, 255, 255, 0.05)",
                  borderRadius: "12px",
                  padding: "15px",
                  border: currentLevel.level >= level.level 
                    ? "2px solid #ff00cc" 
                    : "2px solid rgba(255, 255, 255, 0.1)",
                  opacity: currentLevel.level >= level.level ? 1 : 0.6,
                  maxWidth: "400px",
                  margin: "0 auto",
                  width: "100%",
                  boxSizing: "border-box",
                  overflow: "hidden"
                }}>
                  <div style={{
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    marginBottom: "8px",
                    flexWrap: "wrap",
                    gap: "5px"
                  }}>
                    <div style={{ 
                      fontSize: "clamp(12px, 3.5vw, 14px)", 
                      fontWeight: "bold", 
                      color: "#fff",
                      wordBreak: "break-word"
                    }}>
                      {level.name}
                    </div>
                    <div style={{ 
                      fontSize: "clamp(10px, 2.5vw, 11px)", 
                      color: currentLevel.level >= level.level ? "#ff00cc" : "#ccc",
                      fontWeight: "bold",
                      whiteSpace: "nowrap"
                    }}>
                      {level.scRequired} SC
                    </div>
                  </div>
                  <div style={{ 
                    fontSize: "clamp(10px, 2.5vw, 11px)", 
                    color: currentLevel.level >= level.level ? "#ffffff" : "#ffffff",
                    lineHeight: "1.3",
                    marginBottom: "6px",
                    wordBreak: "break-word",
                    textShadow: "0 1px 2px rgba(0,0,0,0.3)"
                  }}>
                    {level.reward}
                  </div>
                  <div style={{ 
                    fontSize: "clamp(8px, 2vw, 9px)", 
                    color: currentLevel.level >= level.level ? "#ffffff" : "#ffffff",
                    lineHeight: "1.2",
                    wordBreak: "break-word",
                    textShadow: "0 1px 2px rgba(0,0,0,0.3)"
                  }}>
                    {level.description}
                  </div>
                </div>
              ))}
            </div>
          </>
        )}
      </div>



      {/* –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç–º–µ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
      <div style={{
        background: "linear-gradient(135deg, #0f172a, #1e293b)",
        borderRadius: "20px",
        padding: "clamp(25px, 6vw, 30px)",
        marginBottom: "30px",
        border: "2px solid rgba(255, 255, 255, 0.1)",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <h3 style={{ 
          color: "#fff", 
          textAlign: "center", 
          marginBottom: "25px", 
          fontSize: "clamp(18px, 4.5vw, 20px)",
          wordBreak: "break-word"
        }}>
          üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç–º–µ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        </h3>
        
        <div style={{
          display: "grid",
          gridTemplateColumns: "repeat(auto-fit, minmax(250px, 1fr))",
          gap: "clamp(15px, 3vw, 20px)",
          marginBottom: "20px",
          width: "100%"
        }}>
          {Object.entries(todayMetrics).map(([key, value]) => (
            <div key={key} style={{
              background: "rgba(255, 255, 255, 0.1)",
              borderRadius: "12px",
              padding: "clamp(15px, 4vw, 20px)",
              textAlign: "center",
              boxSizing: "border-box"
            }}>
              <div style={{ 
                fontSize: "clamp(14px, 3.5vw, 16px)", 
                fontWeight: "bold", 
                color: "#fff",
                marginBottom: "10px",
                wordBreak: "break-word"
              }}>
                {key === 'memory' && 'üß† –ü–∞–º—è—Ç—å –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è'}
                {key === 'sleep' && 'üò¥ –ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞'}
                {key === 'energy' && '‚ö° –£—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏'}
                {key === 'stress' && 'üòå –°—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å'}
              </div>
              <div style={{ 
                fontSize: "clamp(20px, 5vw, 24px)", 
                fontWeight: "bold",
                color: value > 7 ? "#10b981" : value > 4 ? "#f59e0b" : "#ef4444",
                marginBottom: "10px"
              }}>
                {value}/10
              </div>
              <input
                type="range"
                min="1"
                max="10"
                value={value}
                onChange={(e) => setTodayMetrics({
                  ...todayMetrics,
                  [key]: parseInt(e.target.value)
                })}
                style={{ 
                  width: "100%", 
                  height: "8px",
                  borderRadius: "4px",
                  background: "rgba(255, 255, 255, 0.2)",
                  outline: "none"
                }}
              />
            </div>
          ))}
        </div>
        
        <div style={{
          background: "rgba(255, 255, 255, 0.1)",
          borderRadius: "12px",
          padding: "clamp(15px, 4vw, 20px)",
          marginBottom: "20px",
          width: "100%",
          boxSizing: "border-box"
        }}>
          <div style={{ 
            fontSize: "clamp(14px, 3.5vw, 16px)", 
            fontWeight: "bold", 
            color: "#fff",
            marginBottom: "10px",
            wordBreak: "break-word"
          }}>
            üìù –ó–∞–º–µ—Ç–∫–∏ –æ –Ω–µ–¥–µ–ª–µ
          </div>
          <textarea
            value={weeklyObservations}
            onChange={(e) => setWeeklyObservations(e.target.value)}
            placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é, –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è..."
            style={{
              width: "100%",
              minHeight: "80px",
              background: "rgba(255, 255, 255, 0.05)",
              border: "1px solid rgba(255, 255, 255, 0.2)",
              borderRadius: "8px",
              padding: "12px",
              color: "#fff",
              fontSize: "clamp(12px, 3vw, 14px)",
              fontFamily: "inherit",
              resize: "vertical",
              outline: "none",
              boxSizing: "border-box"
            }}
          />
        </div>
      </div>

      {/* –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã */}
      <div style={{
        background: "linear-gradient(135deg, #0f172a, #1e293b)",
        borderRadius: "20px",
        padding: "clamp(25px, 6vw, 30px)",
        marginBottom: "30px",
        border: "2px solid rgba(255, 255, 255, 0.1)",
        width: "100%",
        boxSizing: "border-box",
        overflow: "hidden"
      }}>
        <h3 style={{ 
          color: "#fff", 
          textAlign: "center", 
          marginBottom: "25px", 
          fontSize: "clamp(18px, 4.5vw, 20px)",
          wordBreak: "break-word"
        }}>
          üì± –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
        </h3>
        
        <div style={{
          display: "grid",
          gridTemplateColumns: "repeat(auto-fit, minmax(250px, 1fr))",
          gap: "clamp(15px, 3vw, 20px)",
          width: "100%"
        }}>
          {/* Telegram –∫–∞–Ω–∞–ª */}
          <div style={{
            background: "rgba(255, 255, 255, 0.1)",
            borderRadius: "15px",
            padding: "20px",
            textAlign: "center",
            border: subscribeSuccess === 'telegram' ? "2px solid #10b981" : "2px solid rgba(255, 255, 255, 0.1)"
          }}>
            <div style={{ fontSize: "48px", marginBottom: "15px" }}>üì±</div>
            <div style={{ fontSize: "18px", fontWeight: "bold", color: "#fff", marginBottom: "10px" }}>
              Telegram –∫–∞–Ω–∞–ª
            </div>
            <div style={{ fontSize: "14px", color: "#ccc", marginBottom: "15px" }}>
              –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ t.me/spor3s
            </div>
            <div style={{ fontSize: "16px", fontWeight: "bold", color: "#ff00cc", marginBottom: "15px" }}>
              +50 SC
            </div>
            {subscribeSuccess === 'telegram' ? (
              <div style={{
                background: "linear-gradient(45deg, #10b981, #059669)",
                color: "white",
                padding: "12px 20px",
                borderRadius: "10px",
                fontSize: "14px",
                fontWeight: "bold",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                gap: "8px",
                boxShadow: "0 4px 15px rgba(16, 185, 129, 0.3)"
              }}>
                <span style={{ fontSize: "18px" }}>‚úÖ</span>
                <span>–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</span>
              </div>
            ) : (
              <div style={{ 
                display: "flex", 
                gap: "8px", 
                justifyContent: "center",
                flexWrap: "wrap"
              }}>
                <button
                  onClick={() => window.open('https://t.me/spor3s', '_blank')}
                  style={{
                    background: "linear-gradient(45deg, #0088cc, #00a8ff)",
                    color: "white",
                    border: "none",
                    borderRadius: "8px",
                    padding: "8px 16px",
                    fontSize: "14px",
                    fontWeight: "bold",
                    cursor: "pointer",
                    transition: "transform 0.2s"
                  }}
                  onMouseOver={(e) => e.currentTarget.style.transform = "scale(1.05)"}
                  onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
                >
                  üì± –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                </button>
                <button
                  onClick={() => handleSubscribe('telegram')}
                  disabled={subscribeLoading === 'telegram'}
                  style={{
                    background: subscribeLoading === 'telegram' 
                      ? "rgba(255, 0, 204, 0.5)" 
                      : "linear-gradient(45deg, #ff00cc, #3333ff)",
                    color: "white",
                    border: "none",
                    borderRadius: "8px",
                    padding: "8px 16px",
                    fontSize: "14px",
                    fontWeight: "bold",
                    cursor: subscribeLoading === 'telegram' ? "not-allowed" : "pointer",
                    transition: "transform 0.2s",
                    opacity: subscribeLoading === 'telegram' ? 0.7 : 1
                  }}
                  onMouseOver={(e) => {
                    if (subscribeLoading !== 'telegram') {
                      e.currentTarget.style.transform = "scale(1.05)";
                    }
                  }}
                  onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
                >
                  {subscribeLoading === 'telegram' ? '‚è≥' : 'üí∞ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å'}
                </button>
              </div>
            )}
          </div>

          {/* YouTube –∫–∞–Ω–∞–ª */}
          <div style={{
            background: "rgba(255, 255, 255, 0.1)",
            borderRadius: "15px",
            padding: "20px",
            textAlign: "center",
            border: subscribeSuccess === 'youtube' ? "2px solid #10b981" : "2px solid rgba(255, 255, 255, 0.1)"
          }}>
            <div style={{ fontSize: "48px", marginBottom: "15px" }}>üì∫</div>
            <div style={{ fontSize: "18px", fontWeight: "bold", color: "#fff", marginBottom: "10px" }}>
              YouTube –∫–∞–Ω–∞–ª
            </div>
            <div style={{ fontSize: "14px", color: "#ccc", marginBottom: "15px" }}>
              –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ @spor3s
            </div>
            <div style={{ fontSize: "16px", fontWeight: "bold", color: "#ff00cc", marginBottom: "15px" }}>
              +50 SC
            </div>
            {subscribeSuccess === 'youtube' ? (
              <div style={{
                background: "linear-gradient(45deg, #10b981, #059669)",
                color: "white",
                padding: "12px 20px",
                borderRadius: "10px",
                fontSize: "14px",
                fontWeight: "bold",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                gap: "8px",
                boxShadow: "0 4px 15px rgba(16, 185, 129, 0.3)"
              }}>
                <span style={{ fontSize: "18px" }}>‚úÖ</span>
                <span>–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</span>
              </div>
            ) : (
              <div style={{ 
                display: "flex", 
                gap: "8px", 
                justifyContent: "center",
                flexWrap: "wrap"
              }}>
                <button
                  onClick={() => window.open('https://www.youtube.com/@spor3s', '_blank')}
                  style={{
                    background: "linear-gradient(45deg, #ff0000, #cc0000)",
                    color: "white",
                    border: "none",
                    borderRadius: "8px",
                    padding: "8px 16px",
                    fontSize: "14px",
                    fontWeight: "bold",
                    cursor: "pointer",
                    transition: "transform 0.2s"
                  }}
                  onMouseOver={(e) => e.currentTarget.style.transform = "scale(1.05)"}
                  onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
                >
                  üì∫ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                </button>
                <button
                  onClick={() => handleSubscribe('youtube')}
                  disabled={subscribeLoading === 'youtube'}
                  style={{
                    background: subscribeLoading === 'youtube' 
                      ? "rgba(255, 0, 204, 0.5)" 
                      : "linear-gradient(45deg, #ff00cc, #3333ff)",
                    color: "white",
                    border: "none",
                    borderRadius: "8px",
                    padding: "8px 16px",
                    fontSize: "14px",
                    fontWeight: "bold",
                    cursor: subscribeLoading === 'youtube' ? "not-allowed" : "pointer",
                    transition: "transform 0.2s",
                    opacity: subscribeLoading === 'youtube' ? 0.7 : 1
                  }}
                  onMouseOver={(e) => {
                    if (subscribeLoading !== 'youtube') {
                      e.currentTarget.style.transform = "scale(1.05)";
                    }
                  }}
                  onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
                >
                  {subscribeLoading === 'youtube' ? '‚è≥' : 'üí∞ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å'}
                </button>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div style={{
        display: "flex",
        gap: "15px",
        flexWrap: "wrap",
        justifyContent: "center"
      }}>
        <button
          onClick={saveWeeklyProgress}
          style={{
            background: "linear-gradient(45deg, #ff00cc, #3333ff)",
            color: "white",
            border: "none",
            borderRadius: "12px",
            padding: "15px 30px",
            fontSize: "16px",
            fontWeight: "bold",
            cursor: "pointer",
            flex: "1",
            minWidth: "200px",
            transition: "transform 0.2s"
          }}
          onMouseOver={(e) => e.currentTarget.style.transform = "scale(1.02)"}
          onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
        >
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–¥–µ–ª–∏ {currentWeek} (—Å 01.01.2024)
        </button>
        
        <button
          onClick={() => setShowHistoryModal(true)}
          style={{
            background: "linear-gradient(45deg, #10b981, #059669)",
            color: "white",
            border: "none",
            borderRadius: "12px",
            padding: "15px 30px",
            fontSize: "16px",
            fontWeight: "bold",
            cursor: "pointer",
            flex: "1",
            minWidth: "200px",
            transition: "transform 0.2s"
          }}
          onMouseOver={(e) => e.currentTarget.style.transform = "scale(1.02)"}
          onMouseOut={(e) => e.currentTarget.style.transform = "scale(1)"}
        >
          üìà –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
      {showHistoryModal && (
        <div style={{
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: "rgba(0, 0, 0, 0.8)",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          zIndex: 1000,
          padding: "20px"
        }}>
          <div style={{
            background: "linear-gradient(135deg, #0f172a, #1e293b)",
            borderRadius: "20px",
            padding: "30px",
            maxWidth: "600px",
            width: "100%",
            maxHeight: "80vh",
            overflowY: "auto",
            border: "2px solid rgba(255, 255, 255, 0.1)"
          }}>
            <div style={{
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
              marginBottom: "25px"
            }}>
              <h3 style={{ color: "#fff", fontSize: "20px", margin: 0 }}>
                üìà –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
              </h3>
              <button
                onClick={() => setShowHistoryModal(false)}
                style={{
                  background: "rgba(255, 255, 255, 0.1)",
                  border: "none",
                  borderRadius: "50%",
                  width: "40px",
                  height: "40px",
                  color: "#fff",
                  fontSize: "20px",
                  cursor: "pointer",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center"
                }}
              >
                ‚úï
              </button>
            </div>

            {weeklyProgress.length === 0 ? (
              <div style={{ textAlign: "center", color: "#ccc", padding: "40px" }}>
                üìä –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
              </div>
            ) : (
              <>
                {/* –ì—Ä–∞—Ñ–∏–∫ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
                <div style={{ marginBottom: "30px" }}>
                  <h4 style={{ color: "#fff", marginBottom: "15px", textAlign: "center" }}>
                    üìä –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å (–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π –∏—Ç–æ–≥)
                  </h4>
                  <div style={{
                    background: "rgba(255, 255, 255, 0.05)",
                    borderRadius: "12px",
                    padding: "20px",
                    marginBottom: "20px"
                  }}>
                    {['memory', 'sleep', 'energy', 'stress'].map((metric) => {
                      const cumulativeData = weeklyProgress.map((week, index) => {
                        const total = weeklyProgress.slice(0, index + 1).reduce((sum, w) => sum + w.metrics[metric as keyof Metrics], 0);
                        return total / (index + 1);
                      });
                      
                      const latest = cumulativeData[cumulativeData.length - 1];
                      const improvement = latest - cumulativeData[0];
                      
                      return (
                        <div key={metric} style={{ marginBottom: "15px" }}>
                          <div style={{
                            display: "flex",
                            justifyContent: "space-between",
                            alignItems: "center",
                            marginBottom: "5px"
                          }}>
                            <span style={{ color: "#fff", fontSize: "14px" }}>
                              {metric === 'memory' && 'üß† –ü–∞–º—è—Ç—å'}
                              {metric === 'sleep' && 'üò¥ –°–æ–Ω'}
                              {metric === 'energy' && '‚ö° –≠–Ω–µ—Ä–≥–∏—è'}
                              {metric === 'stress' && 'üòå –°—Ç—Ä–µ—Å—Å'}
                            </span>
                            <span style={{ 
                              color: improvement > 0 ? "#10b981" : improvement < 0 ? "#ef4444" : "#ccc",
                              fontSize: "14px",
                              fontWeight: "bold"
                            }}>
                              {latest.toFixed(1)}/10
                              {improvement > 0 && ` (+${improvement.toFixed(1)})`}
                              {improvement < 0 && ` (${improvement.toFixed(1)})`}
                            </span>
                          </div>
                          <div style={{
                            background: "rgba(255, 255, 255, 0.1)",
                            borderRadius: "8px",
                            height: "8px",
                            overflow: "hidden"
                          }}>
                            <div style={{
                              background: "linear-gradient(90deg, #ff00cc, #3333ff)",
                              height: "100%",
                              width: `${(latest / 10) * 100}%`,
                              transition: "width 0.3s ease"
                            }} />
                          </div>
                        </div>
                      );
                    })}
                  </div>
                </div>

                {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ –Ω–µ–¥–µ–ª—è–º */}
                <div>
                  <h4 style={{ color: "#fff", marginBottom: "15px", textAlign: "center" }}>
                    üìÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ –Ω–µ–¥–µ–ª—è–º
                  </h4>
                  <div style={{
                    maxHeight: "300px",
                    overflowY: "auto"
                  }}>
                    {weeklyProgress.map((week, index) => (
                      <div key={week.week} style={{
                        background: "rgba(255, 255, 255, 0.05)",
                        borderRadius: "12px",
                        padding: "15px",
                        marginBottom: "10px"
                      }}>
                        <div style={{
                          display: "flex",
                          justifyContent: "space-between",
                          alignItems: "center",
                          marginBottom: "10px"
                        }}>
                          <div style={{ color: "#ff00cc", fontWeight: "bold" }}>
                            –ù–µ–¥–µ–ª—è {week.week}
                          </div>
                          <div style={{ color: "#ccc", fontSize: "12px" }}>
                            {new Date(week.date).toLocaleDateString('ru-RU')}
                          </div>
                        </div>
                        
                        <div style={{
                          display: "grid",
                          gridTemplateColumns: "repeat(4, 1fr)",
                          gap: "10px",
                          marginBottom: "10px"
                        }}>
                          {Object.entries(week.metrics).map(([key, value]) => (
                            <div key={key} style={{ textAlign: "center" }}>
                              <div style={{ fontSize: "12px", color: "#ccc", marginBottom: "2px" }}>
                                {key === 'memory' && 'üß†'}
                                {key === 'sleep' && 'üò¥'}
                                {key === 'energy' && '‚ö°'}
                                {key === 'stress' && 'üòå'}
                              </div>
                              <div style={{ 
                                fontSize: "14px", 
                                fontWeight: "bold",
                                color: value > 7 ? "#10b981" : value > 4 ? "#f59e0b" : "#ef4444"
                              }}>
                                {value}/10
                              </div>
                            </div>
                          ))}
                        </div>
                        
                        {week.notes && (
                          <div style={{ 
                            fontSize: "12px", 
                            color: "#ccc", 
                            fontStyle: "italic",
                            marginBottom: "8px"
                          }}>
                            {week.notes}
                          </div>
                        )}
                        
                        {week.achievements.length > 0 && (
                          <div style={{ fontSize: "12px", color: "#ff00cc" }}>
                            üèÜ {week.achievements.join(', ')}
                          </div>
                        )}
                      </div>
                    ))}
                  </div>
                </div>
              </>
            )}
          </div>
        </div>
      )}
    </div>
  );
} 