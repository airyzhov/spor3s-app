"use client";
import React, { useState, useEffect } from 'react';
import { supabase } from '../lib/supabase';
import MushroomTracker from './MushroomTracker';

interface MushroomTrackerPageProps {
  userId: string;
  onCoinsEarned?: (amount: number) => void;
}

const MushroomTrackerPage: React.FC<MushroomTrackerPageProps> = ({ 
  userId, 
  onCoinsEarned 
}) => {
  const [activeOrder, setActiveOrder] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (!userId || userId === 'loading') return;
    
    async function fetchActiveOrder() {
      setLoading(true);
      setError(null);
      
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const { data: orders, error: ordersError } = await supabase
          .from('orders')
          .select('*')
          .eq('user_id', userId)
          .order('created_at', { ascending: false })
          .limit(1);

        if (ordersError) {
          throw new Error(ordersError.message);
        }

        if (!orders || orders.length === 0) {
          setError('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤. –°–Ω–∞—á–∞–ª–∞ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑!');
          setLoading(false);
          return;
        }

        setActiveOrder(orders[0]);
        setLoading(false);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:', err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞');
        setLoading(false);
      }
    }

    fetchActiveOrder();
  }, [userId]);

  if (loading) {
    return (
      <div className="w-full max-w-md mx-auto bg-white rounded-xl shadow-lg p-6 mb-6 text-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-pink-500 mx-auto mb-4"></div>
        <div className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="w-full max-w-md mx-auto bg-white rounded-xl shadow-lg p-6 mb-6 text-center">
        <div className="text-red-500 text-lg mb-4">‚ö†Ô∏è {error}</div>
        <div className="text-gray-600 mb-4">
          –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–µ–º–∞ –¥–æ–±–∞–≤–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.
        </div>
        <button 
          onClick={() => window.location.reload()}
          className="bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-full transition"
        >
          üîÑ –û–±–Ω–æ–≤–∏—Ç—å
        </button>
      </div>
    );
  }

  if (!activeOrder) {
    return (
      <div className="w-full max-w-md mx-auto bg-white rounded-xl shadow-lg p-6 mb-6 text-center">
        <div className="text-gray-600 text-lg mb-4">üì¶ –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω</div>
        <div className="text-gray-500 mb-4">
          –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–∏–µ–º –¥–æ–±–∞–≤–æ–∫.
        </div>
      </div>
    );
  }

  return (
    <div className="w-full">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
      <div className="w-full max-w-md mx-auto bg-white rounded-xl shadow-lg p-6 mb-6">
        <div className="text-center mb-4">
          <h2 className="text-xl font-bold text-pink-600 mb-2">üì¶ –í–∞—à –∑–∞–∫–∞–∑</h2>
          <div className="text-sm text-gray-600">
            ID: {activeOrder.id.slice(0, 8)}...
          </div>
        </div>
        
        <div className="space-y-2 text-sm">
          <div className="flex justify-between">
            <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
            <span className={`font-bold ${
              activeOrder.status === 'pending' ? 'text-yellow-600' : 
              activeOrder.status === 'completed' ? 'text-green-600' : 'text-gray-600'
            }`}>
              {activeOrder.status === 'pending' ? '‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ' : 
               activeOrder.status === 'completed' ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω' : activeOrder.status}
            </span>
          </div>
          
          <div className="flex justify-between">
            <span className="text-gray-600">–°—É–º–º–∞:</span>
            <span className="font-bold text-blue-600">{activeOrder.total || 0} ‚ÇΩ</span>
          </div>
          
          <div className="flex justify-between">
            <span className="text-gray-600">SC –±–∞–ª–∞–Ω—Å:</span>
            <span className="font-bold text-green-600">{activeOrder.spores_coin || 0} SC</span>
          </div>
          
          {activeOrder.created_at && (
            <div className="flex justify-between">
              <span className="text-gray-600">–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:</span>
              <span className="text-gray-800">
                {new Date(activeOrder.created_at).toLocaleDateString('ru-RU')}
              </span>
            </div>
          )}
        </div>
      </div>

      {/* –¢—Ä–µ–∫–µ—Ä –≥—Ä–∏–±–æ–≤ */}
      <MushroomTracker 
        userId={userId}
        orderId={activeOrder.id}
        onCoinsEarned={onCoinsEarned}
      />

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="w-full max-w-md mx-auto bg-white rounded-xl shadow-lg p-6 mb-6">
        <div className="text-center mb-4">
          <h3 className="text-lg font-bold text-pink-600 mb-2">üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h3>
        </div>
        
        <div className="space-y-3 text-sm text-gray-600">
          <div className="flex items-start gap-3">
            <span className="text-pink-500 font-bold">üçÑ</span>
            <span>–¢–∞–ø–∞–π –Ω–∞ –≥—Ä–∏–± –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫–æ–≥–¥–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—à—å –¥–æ–±–∞–≤–∫—É</span>
          </div>
          
          <div className="flex items-start gap-3">
            <span className="text-green-500 font-bold">üí∞</span>
            <span>–ü–æ–ª—É—á–∞–π +10 SC –∑–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∏–µ–º</span>
          </div>
          
          <div className="flex items-start gap-3">
            <span className="text-blue-500 font-bold">üî•</span>
            <span>–°—Ç—Ä–æ–π —Å–µ—Ä–∏—é –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –¥–ª—è –±–æ–Ω—É—Å–æ–≤</span>
          </div>
          
          <div className="flex items-start gap-3">
            <span className="text-yellow-500 font-bold">‚ö†Ô∏è</span>
            <span>–ú–æ–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–∏–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MushroomTrackerPage; 