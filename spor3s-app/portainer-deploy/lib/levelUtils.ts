// üéØ –ù–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê –£–†–û–í–ù–ï–ô SPOR3S-APP
// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Ä–æ–≤–Ω—è–º–∏ –∏ SC

export interface LevelInfo {
  level: number;
  levelName: string;
  levelIcon: string;
  levelCode: string;
  progress: number;
  scToNext: number;
  nextLevel: number | null;
  nextLevelName: string | null;
  benefits: string[];
}

export interface UserLevel {
  current_level: string;
  level_code: string;
  current_sc_balance: number;
  total_sc_earned: number;
  total_sc_spent: number;
  total_orders_amount: number;
  orders_count: number;
  has_motivational_habit: boolean;
  has_expert_chat_access: boolean;
  has_permanent_discount: boolean;
  has_vip_access: boolean;
  level_achieved_at: string | null;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
export const LEVEL_CONFIG = [
  {
    level: 1,
    code: 'novice',
    name: 'üå± –ù–æ–≤–∏—á–æ–∫',
    icon: 'üå±',
    scRequired: 0,
    ordersAmountRequired: 0,
    ordersCountRequired: 0,
    benefits: ['–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  },
  {
    level: 2,
    code: 'mushroom_picker',
    name: 'üçÑ –ì—Ä–∏–±–Ω–∏–∫',
    icon: 'üçÑ',
    scRequired: 20,
    ordersAmountRequired: 0,
    ordersCountRequired: 0,
    benefits: ['–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  },
  {
    level: 3,
    code: 'collector',
    name: 'üåø –°–æ–±–∏—Ä–∞—Ç–µ–ª—å',
    icon: 'üåø',
    scRequired: 100,
    ordersAmountRequired: 0,
    ordersCountRequired: 1,
    benefits: ['–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏', '–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  },
  {
    level: 4,
    code: 'expert',
    name: 'üå≥ –≠–∫—Å–ø–µ—Ä—Ç',
    icon: 'üå≥',
    scRequired: 300,
    ordersAmountRequired: 5000,
    ordersCountRequired: 0,
    benefits: ['–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏', '–£—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö', '–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  },
  {
    level: 5,
    code: 'master',
    name: 'üëë –ú–∞—Å—Ç–µ—Ä',
    icon: 'üëë',
    scRequired: 600,
    ordersAmountRequired: 10000,
    ordersCountRequired: 0,
    benefits: ['–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è 5% —Å–∫–∏–¥–∫–∞', '–î–æ—Å—Ç—É–ø –∫ –Ω–∞–±–æ—Ä–∞–º –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫', '–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  },
  {
    level: 6,
    code: 'legend',
    name: 'üåü –õ–µ–≥–µ–Ω–¥–∞',
    icon: 'üåü',
    scRequired: 1200,
    ordersAmountRequired: 20000,
    ordersCountRequired: 0,
    benefits: ['10% —Å–∫–∏–¥–∫–∞ –Ω–∞–≤—Å–µ–≥–¥–∞', '–ú–µ—Ä—á', '–õ–∏—á–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏', '–ñ–∏–≤–æ–π —Ç—Ä–µ–∫–∏–Ω–≥', '–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  },
  {
    level: 7,
    code: 'myth',
    name: 'üåÄ –ú–∏—Ñ',
    icon: 'üåÄ',
    scRequired: 2000,
    ordersAmountRequired: 30000,
    ordersCountRequired: 0,
    benefits: ['–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤', 'NFT-—Ä–∞–Ω–≥', '–ü–æ–¥–∞—Ä–∫–∏', '–í–µ—á–Ω—ã–π VIP-–¥–æ—Å—Ç—É–ø', '–î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º']
  }
];

// –ú–µ—Ö–∞–Ω–∏–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è SC
export const SC_MECHANICS = {
  daily_checkin: { amount: 3, maxPerMonth: 90, description: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —á–µ–∫-–∏–Ω' },
  weekly_survey: { amount: 25, maxPerMonth: 100, description: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞' },
  motivational_habit: { amount: 25, maxPerMonth: 100, description: '–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞' }
};

export function getLevelInfo(sc: number, ordersAmount: number = 0, ordersCount: number = 0): LevelInfo {
  // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
  let currentLevel = LEVEL_CONFIG[0];
  let nextLevel = null;
  
  for (let i = 0; i < LEVEL_CONFIG.length; i++) {
    const level = LEVEL_CONFIG[i];
    if (sc >= level.scRequired && 
        ordersAmount >= level.ordersAmountRequired && 
        ordersCount >= level.ordersCountRequired) {
      currentLevel = level;
      nextLevel = LEVEL_CONFIG[i + 1] || null;
    } else {
      nextLevel = level;
      break;
    }
  }
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
  let progress = 0;
  let scToNext = 0;
  
  if (nextLevel) {
    const currentThreshold = currentLevel.scRequired;
    const nextThreshold = nextLevel.scRequired;
    progress = (sc - currentThreshold) / (nextThreshold - currentThreshold);
    scToNext = nextThreshold - sc;
  } else {
    progress = 1;
    scToNext = 0;
  }
  
  return {
    level: currentLevel.level,
    levelName: currentLevel.name,
    levelIcon: currentLevel.icon,
    levelCode: currentLevel.code,
    progress: Math.max(0, Math.min(1, progress)),
    scToNext,
    nextLevel: nextLevel?.level || null,
    nextLevelName: nextLevel?.name || null,
    benefits: currentLevel.benefits
  };
}

export function calculateMonthlySC(activeDays: number = 30): number {
  const dailyCheckin = SC_MECHANICS.daily_checkin.amount * Math.min(activeDays, 30);
  const weeklySurveys = SC_MECHANICS.weekly_survey.amount * Math.min(Math.floor(activeDays / 7), 4);
  const motivationalHabits = SC_MECHANICS.motivational_habit.amount * Math.min(Math.floor(activeDays / 7), 4);
  
  return dailyCheckin + weeklySurveys + motivationalHabits;
}

export function getLevelBenefits(levelCode: string): string[] {
  const level = LEVEL_CONFIG.find(l => l.code === levelCode);
  return level?.benefits || [];
}

export function canAccessMotivationalHabit(userLevel: UserLevel): boolean {
  return userLevel.has_motivational_habit;
}

export function getDiscountPercentage(userLevel: UserLevel): number {
  if (userLevel.has_vip_access) return 10; // –õ–µ–≥–µ–Ω–¥–∞ –∏ –≤—ã—à–µ
  if (userLevel.has_permanent_discount) return 5; // –ú–∞—Å—Ç–µ—Ä
  return 0;
}

export function formatSCAmount(amount: number): string {
  return `${amount} SC`;
}

export function formatOrderAmount(amount: number): string {
  return new Intl.NumberFormat('ru-RU', {
    style: 'currency',
    currency: 'RUB',
    minimumFractionDigits: 0
  }).format(amount);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
export function estimateTimeToNextLevel(currentSC: number, monthlySC: number): string {
  const levelInfo = getLevelInfo(currentSC);
  if (!levelInfo.nextLevel || levelInfo.scToNext <= 0) {
    return '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç';
  }
  
  const months = Math.ceil(levelInfo.scToNext / monthlySC);
  
  if (months <= 1) {
    return '–ú–µ–Ω–µ–µ –º–µ—Å—è—Ü–∞';
  } else if (months <= 3) {
    return `${months} –º–µ—Å—è—Ü–∞`;
  } else {
    return `${months} –º–µ—Å—è—Ü–µ–≤`;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
export function checkLevelUp(oldLevel: UserLevel, newLevel: UserLevel): boolean {
  return oldLevel.level_code !== newLevel.level_code;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
export function getMotivationalMessage(userLevel: UserLevel, scToNext: number): string {
  const messages = [
    `–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å ${scToNext} SC`,
    `–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –Ω–∞ –ø—É—Ç–∏ –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º`,
    `–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —à–∞–≥ –∫ –≤–∞—à–µ–π —Ü–µ–ª–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!`,
    `–í–∞—à–∞ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç! –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ—Å—å`,
    `–í—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç–µ –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!`
  ];
  
  return messages[Math.floor(Math.random() * messages.length)];
} 