"use client";
import { useState, useEffect } from "react";

interface OrderFormProps {
  products?: any[];
  setStep?: (step: number) => void;
  userId?: string | null;
  telegramUser?: {
    telegram_id: string;
    first_name?: string;
    last_name?: string;
    username?: string;
  } | null;
  cartItems?: any[]; // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
}

const initialSurvey = {
  stress: 5,
  anxiety: 5,
  joy: 5,
  pointA: "",
  progress: 5,
  referral: "",
  source: "",
  cdek_address: "",
  fio: "",
  phone: "",
  delivery_type: "cdek", // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏
  delivery_address: "" // –î–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
};

export default function OrderForm({ products = [], setStep, userId, telegramUser, cartItems = [] }: OrderFormProps) {
  const [localProducts, setLocalProducts] = useState(products);
  const [selectedItems, setSelectedItems] = useState(cartItems);
  const [survey, setSurvey] = useState(initialSurvey);
  const [loading, setLoading] = useState(false);
  const [success, setSuccess] = useState("");
  const [error, setError] = useState("");
  const [mounted, setMounted] = useState(false);

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
  useEffect(() => {
    const handleError = (event: ErrorEvent) => {
      console.error('OrderForm Error:', event.error);
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    };

    window.addEventListener('error', handleError);
    return () => window.removeEventListener('error', handleError);
  }, []);

  useEffect(() => {
    setMounted(true);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ localStorage
    const savedCartItems = localStorage.getItem('spor3s_cart_items');
    if (savedCartItems) {
      try {
        const parsedCart = JSON.parse(savedCartItems);
        setSelectedItems(Array.isArray(parsedCart) ? parsedCart : []);
        console.log('üõí Loaded cart items from localStorage:', parsedCart);
      } catch (error) {
        console.error('Error parsing cart items:', error);
        setSelectedItems(cartItems);
      }
    } else {
      setSelectedItems(cartItems);
    }
    
    // –ï—Å–ª–∏ products –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∏–ª–∏ –ø—É—Å—Ç—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
    if (!products || products.length === 0) {
      fetch("/api/products")
        .then(r => r.json())
        .then(d => setLocalProducts(Array.isArray(d.products) ? d.products : []))
        .catch(err => {
          console.error('Error loading products:', err);
          // Fallback products
          setLocalProducts([
            { id: 'ezh100', name: '–ï–∂–æ–≤–∏–∫ 100–≥ –ø–æ—Ä–æ—à–æ–∫', price: 1200 },
            { id: 'ezh120k', name: '–ï–∂–æ–≤–∏–∫ 120 –∫–∞–ø—Å—É–ª', price: 1500 },
            { id: 'mhm30', name: '–ú—É—Ö–æ–º–æ—Ä 30–≥', price: 800 },
            { id: 'mhm50', name: '–ú—É—Ö–æ–º–æ—Ä 50–≥', price: 1200 },
            { id: 'mhm100', name: '–ú—É—Ö–æ–º–æ—Ä 100–≥', price: 2000 },
          ]);
        });
    } else {
      setLocalProducts(products);
    }

    console.log('üìã OrderForm loaded with props:', {
      userId: userId ? userId.slice(0, 12) + '...' : 'NULL',
      telegramUser: telegramUser ? telegramUser.telegram_id : 'NULL',
      productsCount: products?.length || 0,
      cartItemsCount: selectedItems.length
    });
  }, [products, userId, telegramUser, cartItems]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω
  if (!mounted) {
    return (
      <div style={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        minHeight: '200px',
        color: '#fff',
        fontSize: '18px'
      }}>
        –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞...
      </div>
    );
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
  const isRealTelegram = telegramUser && telegramUser.telegram_id && !telegramUser.telegram_id.startsWith('test-user-');
  const displayName = isRealTelegram 
    ? `${telegramUser.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} ${telegramUser.last_name || ''}`.trim()
    : '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∑–∞–∫–∞–∑–∞
    if (!survey.fio || !survey.phone) {
      setError("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –§–ò–û –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.");
      return;
    }

    if (selectedItems.length === 0) {
      setError("‚ùå –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É.");
      return;
    }

    setLoading(true);
    setError("");

    try {
      // –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
      const orderPromises = selectedItems.map(item => {
        const orderData = {
          user_id: userId || null, // –ú–æ–∂–µ—Ç –±—ã—Ç—å null –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          items: [{
            id: item.id,
            name: item.name,
            price: item.price,
            quantity: item.quantity || 1
          }],
          total: item.price * (item.quantity || 1),
          address: survey.delivery_type === 'cdek' ? survey.cdek_address : survey.delivery_address,
          fio: survey.fio,
          phone: survey.phone,
          referral_code: survey.referral || null,
          comment: `–ó–∞–∫–∞–∑ —á–µ—Ä–µ–∑ ${userId ? '–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' : '–≥–æ—Å—Ç—è'}. ${telegramUser ? `Telegram: ${telegramUser.telegram_id}` : ''}`,
          coins_to_use: 0
        };

        console.log('üì¶ Submitting order for item:', orderData);

        return fetch("/api/order-simple", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(orderData),
        }).then(r => r.json());
      });

      const results = await Promise.all(orderPromises);
      const successfulOrders = results.filter(r => r.success);
      
      if (successfulOrders.length > 0) {
        setSuccess(`‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –û—Ñ–æ—Ä–º–ª–µ–Ω–æ ${successfulOrders.length} —Ç–æ–≤–∞—Ä–æ–≤.`);
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –∏ –æ—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
        setSelectedItems([]);
        setSurvey(initialSurvey);
        localStorage.removeItem('spor3s_cart_items'); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ localStorage
        
        setTimeout(() => {
          if (setStep) setStep(2); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–æ—Ä–∑–∏–Ω–µ
        }, 2000);
      } else {
        setError(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ${results[0]?.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
      }
    } catch (err) {
      console.error("Order submit error:", err);
      setError(`‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${err instanceof Error ? err.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
    } finally {
      setLoading(false);
    }
  };

  if (!mounted) return null;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  if (error) {
    return (
      <div style={{ 
        maxWidth: 800, 
        margin: "0 auto", 
        color: "#fff", 
        padding: "clamp(15px, 4vw, 20px)",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        width: "100%"
      }}>
        <div style={{
          background: "rgba(220, 53, 69, 0.2)",
          border: "2px solid #dc3545",
          borderRadius: 12,
          padding: 20,
          textAlign: "center",
          marginBottom: 20
        }}>
          <h3 style={{ color: "#dc3545", marginBottom: 10 }}>üö® –û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h3>
          <p style={{ marginBottom: 15 }}>{error}</p>
          <button
            onClick={() => {
              setError("");
              window.location.reload();
            }}
            style={{
              background: "#dc3545",
              color: "white",
              border: "none",
              borderRadius: 8,
              padding: "10px 20px",
              cursor: "pointer",
              fontSize: 14
            }}
          >
            üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
        <button
          onClick={() => setStep && setStep(2)}
          style={{
            background: "rgba(255, 255, 255, 0.1)",
            color: "white",
            border: "1px solid rgba(255, 255, 255, 0.3)",
            borderRadius: 8,
            padding: "10px 20px",
            cursor: "pointer",
            fontSize: 14
          }}
        >
          ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–æ—Ä–∑–∏–Ω–µ
        </button>
      </div>
    );
  }

  return (
    <div style={{ 
      maxWidth: 800, 
      margin: "0 auto", 
      color: "#fff", 
      padding: "clamp(15px, 4vw, 20px)",
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      width: "100%"
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        textAlign: "center",
        marginBottom: "clamp(20px, 5vw, 30px)",
        width: "100%",
        maxWidth: "600px"
      }}>
        <h2 style={{ 
          fontSize: "clamp(24px, 6vw, 32px)", 
          marginBottom: 10,
          color: "#ff00cc"
        }}>
          üõí –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        </h2>
        <p style={{ 
          fontSize: "clamp(14px, 3.5vw, 16px)", 
          color: "#ccc",
          lineHeight: 1.5
        }}>
          –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
        </p>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
      <div style={{
        background: "rgba(255, 255, 255, 0.05)",
        borderRadius: 12,
        padding: "clamp(15px, 4vw, 20px)",
        marginBottom: "clamp(20px, 5vw, 30px)",
        width: "100%",
        maxWidth: "600px",
        textAlign: "center"
      }}>
        <div style={{ 
          fontSize: "clamp(16px, 4vw, 18px)", 
          color: "#ff00cc",
          marginBottom: 8
        }}>
          üë§ {displayName}
        </div>
        <div style={{ 
          fontSize: "clamp(12px, 3vw, 14px)", 
          color: "#ccc",
          fontFamily: "monospace"
        }}>
          ID: {userId ? userId.slice(0, 8) + '...' + userId.slice(-4) : 'N/A'}
        </div>
      </div>

      {!userId && (
        <div style={{
          background: "rgba(255, 193, 7, 0.1)",
          border: "1px solid #ffc107",
          borderRadius: 8,
          padding: 15,
          marginBottom: 20,
          textAlign: "center"
        }}>
          <strong>‚ö†Ô∏è –ì–æ—Å—Ç—å</strong><br/>
          –í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∏–∂–µ.
          {telegramUser && (
            <div style={{ marginTop: 8, fontSize: 14, color: "#ccc" }}>
              üí° –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram.
            </div>
          )}
        </div>
      )}

      {success && (
        <div style={{
          background: "rgba(0, 255, 136, 0.1)",
          border: "1px solid #00ff88",
          borderRadius: 8,
          padding: 15,
          marginBottom: 20,
          color: "#00ff88",
          textAlign: "center"
        }}>
          {success}
        </div>
      )}

      {error && (
        <div style={{
          background: "rgba(255, 107, 107, 0.1)",
          border: "1px solid #ff6b6b",
          borderRadius: 8,
          padding: 15,
          marginBottom: 20,
          color: "#ff6b6b",
          textAlign: "center"
        }}>
          {error}
        </div>
      )}

      <form onSubmit={handleSubmit}>
        {/* –¢–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã */}
        <div style={{ marginBottom: 20 }}>
          <h3 style={{ fontSize: 18, marginBottom: 15, color: "#ff00cc" }}>
            üõí –í–∞—à –∑–∞–∫–∞–∑:
          </h3>
          
          {selectedItems.length > 0 ? (
            <div style={{ marginBottom: 20 }}>
              {selectedItems.map((item, index) => (
                <div key={index} style={{
                  background: "rgba(255, 255, 255, 0.05)",
                  borderRadius: 8,
                  padding: 15,
                  marginBottom: 10,
                  border: "1px solid rgba(255, 255, 255, 0.1)"
                }}>
                  <div style={{ fontSize: 16, fontWeight: 600, marginBottom: 5 }}>
                    {item.name}
                  </div>
                  <div style={{ fontSize: 14, color: "#ccc" }}>
                    –¶–µ–Ω–∞: {item.price}‚ÇΩ √ó {item.quantity || 1} —à—Ç. = {item.price * (item.quantity || 1)}‚ÇΩ
                  </div>
                </div>
              ))}
              
              <div style={{
                background: "rgba(255, 255, 255, 0.1)",
                borderRadius: 8,
                padding: 15,
                marginTop: 15,
                textAlign: "center"
              }}>
                <div style={{ fontSize: 18, fontWeight: 600 }}>
                  üí∞ –ò—Ç–æ–≥–æ: <span style={{ color: "#ff00cc" }}>
                    {selectedItems.reduce((total, item) => total + (item.price * (item.quantity || 1)), 0)}‚ÇΩ
                  </span>
                </div>
              </div>
            </div>
          ) : (
            <div style={{
              background: "rgba(255, 107, 107, 0.1)",
              border: "1px solid #ff6b6b",
              borderRadius: 8,
              padding: 15,
              textAlign: "center"
            }}>
              <strong>üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!</strong><br/>
              –í–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É.
            </div>
          )}
        </div>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
        <div style={{ marginBottom: 20 }}>
          <h3 style={{ fontSize: 18, marginBottom: 15, color: "#ff00cc" }}>
            üìù –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
          </h3>
          
          <div style={{ marginBottom: 15 }}>
            <label style={{ display: "block", marginBottom: 5, fontSize: 14 }}>
              üë§ –§–ò–û:
            </label>
            <input
              type="text"
              value={survey.fio}
              onChange={(e) => setSurvey(prev => ({...prev, fio: e.target.value}))}
              disabled={loading}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û"
              style={{
                width: "100%",
                padding: 12,
                borderRadius: 8,
                border: "1px solid #666",
                background: "#2a2a2a",
                color: "#fff",
                fontSize: 14
              }}
              required
            />
          </div>

          <div style={{ marginBottom: 15 }}>
            <label style={{ display: "block", marginBottom: 5, fontSize: 14 }}>
              üì± –¢–µ–ª–µ—Ñ–æ–Ω:
            </label>
            <input
              type="tel"
              value={survey.phone}
              onChange={(e) => setSurvey(prev => ({...prev, phone: e.target.value}))}
              disabled={loading}
              placeholder="+7 (___) ___-__-__"
              style={{
                width: "100%",
                padding: 12,
                borderRadius: 8,
                border: "1px solid #666",
                background: "#2a2a2a",
                color: "#fff",
                fontSize: 14
              }}
              required
            />
          </div>

          {/* –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏ */}
          <div style={{ marginBottom: 15 }}>
            <label style={{ display: "block", marginBottom: 5, fontSize: 14 }}>
              üöö –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏:
            </label>
            <select
              value={survey.delivery_type}
              onChange={(e) => setSurvey(prev => ({...prev, delivery_type: e.target.value}))}
              disabled={loading}
              style={{
                width: "100%",
                padding: 12,
                borderRadius: 8,
                border: "1px solid #666",
                background: "#2a2a2a",
                color: "#fff",
                fontSize: 14,
                cursor: "pointer"
              }}
              required
            >
              <option value="cdek">üì¶ –°–î–≠–ö (–ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏)</option>
              <option value="courier">üöö –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</option>
            </select>
          </div>

          {/* –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ */}
          <div style={{ marginBottom: 15 }}>
            <label style={{ display: "block", marginBottom: 5, fontSize: 14 }}>
              üìç {survey.delivery_type === 'cdek' ? '–ê–¥—Ä–µ—Å –°–î–≠–ö (–ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏):' : '–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:'}
            </label>
            <input
              type="text"
              value={survey.delivery_type === 'cdek' ? survey.cdek_address : survey.delivery_address}
              onChange={(e) => {
                if (survey.delivery_type === 'cdek') {
                  setSurvey(prev => ({...prev, cdek_address: e.target.value}));
                } else {
                  setSurvey(prev => ({...prev, delivery_address: e.target.value}));
                }
              }}
              disabled={loading}
              placeholder={survey.delivery_type === 'cdek' 
                ? "–£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Ñ–∏–ª–∏–∞–ª –°–î–≠–ö" 
                : "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∫—É—Ä—å–µ—Ä–æ–º"
              }
              style={{
                width: "100%",
                padding: 12,
                borderRadius: 8,
                border: "1px solid #666",
                background: "#2a2a2a",
                color: "#fff",
                fontSize: 14
              }}
              required
            />
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div style={{
          display: "flex",
          gap: 15,
          justifyContent: "center",
          marginTop: 30
        }}>
          <button
            type="button"
            onClick={() => setStep && setStep(2)}
            style={{
              background: "rgba(255, 255, 255, 0.1)",
              border: "1px solid #666",
              borderRadius: 25,
              color: "#fff",
              padding: "12px 24px",
              fontSize: 14,
              cursor: "pointer",
              transition: "all 0.3s ease"
            }}
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–æ—Ä–∑–∏–Ω–µ
          </button>
          
          <button
            type="submit"
                         disabled={loading || selectedItems.length === 0}
             style={{
               background: (loading || selectedItems.length === 0) 
                 ? "rgba(100, 100, 100, 0.5)"
                 : "linear-gradient(45deg, #00ff88, #00cc6a)",
               border: "none",
               borderRadius: 25,
               color: "#fff",
               padding: "12px 24px",
               fontSize: 14,
               fontWeight: 600,
               cursor: (loading || selectedItems.length === 0) ? "not-allowed" : "pointer",
               opacity: (loading || selectedItems.length === 0) ? 0.5 : 1,
               transition: "all 0.3s ease"
             }}
          >
            {loading ? "‚è≥ –û—Ñ–æ—Ä–º–ª—è–µ–º..." : "‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"}
          </button>
        </div>
      </form>
    </div>
  );
} 