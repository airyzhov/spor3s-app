"use client";
import { useState, useEffect, useRef } from "react";
import { useCart } from "../CartContext";

// –¢–∏–ø—ã –¥–ª—è Telegram WebApp

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
}

interface ChatProps {
  products: any[];
  setStep?: (step: number) => void;
}

export default function Chat({ products, setStep }: ChatProps) {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [mounted, setMounted] = useState(false);
  const [userId, setUserId] = useState<string>('test-user-123456789');
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const { addToCart, removeFromCart } = useCart();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ CartContext —Ä–∞–±–æ—Ç–∞–µ—Ç
  useEffect(() => {
    console.log('üîç DEBUG: CartContext –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    console.log('üîç DEBUG: addToCart —Ñ—É–Ω–∫—Ü–∏—è:', typeof addToCart);
    console.log('üîç DEBUG: removeFromCart —Ñ—É–Ω–∫—Ü–∏—è:', typeof removeFromCart);
  }, [addToCart, removeFromCart]);

  // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üîç DEBUG: –ü—Ä–æ–¥—É–∫—Ç—ã –≤ —á–∞—Ç–µ:', products);
    console.log('üîç DEBUG: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', products?.length || 0);
    if (products && products.length > 0) {
      console.log('üîç DEBUG: –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', products.map(p => ({ id: p.id, name: p.name })));
    }
  }, [products]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
  useEffect(() => {
    const savedMessages = localStorage.getItem('chat_history');
    if (savedMessages) {
      try {
        const parsedMessages = JSON.parse(savedMessages);
        setMessages(parsedMessages);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞:', error);
      }
    } else {
      // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      setMessages([{
        id: '1',
        role: 'assistant',
        content: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ spor3s! üçÑ –ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –≥—Ä–∏–±–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏:\n\nüß† –î–ª—è –ø–∞–º—è—Ç–∏ –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ ‚Äî –ï–∂–æ–≤–∏–∫\nüò¥ –î–ª—è —Å–Ω–∞ –∏ —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞ ‚Äî –ú—É—Ö–æ–º–æ—Ä\n‚ö° –î–ª—è —ç–Ω–µ—Ä–≥–∏–∏ ‚Äî –ö–æ—Ä–¥–∏—Ü–µ–ø—Å\nüåü –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∫—É—Ä—Å 4 –≤ 1\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤–Ω–∏–∑—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!',
        timestamp: new Date()
      }]);
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    if (messages.length > 0) {
      localStorage.setItem('chat_history', JSON.stringify(messages));
    }
  }, [messages]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp
  useEffect(() => {
    const initializeUser = async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Telegram WebApp
        if (window.Telegram && window.Telegram.WebApp) {
          const webApp = window.Telegram.WebApp;
          const initData = webApp.initDataUnsafe;
          
          if (initData && initData.user) {
            const telegramUserId = initData.user.id.toString();
            console.log('üîç DEBUG: Telegram User ID:', telegramUserId);
            setUserId(telegramUserId);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            try {
              const response = await fetch('/api/init-user', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  telegram_id: telegramUserId,
                  name: initData.user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
                })
              });
              
              if (response.ok) {
                const data = await response.json();
                console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', data);
              } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', response.status);
              }
            } catch (error) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            }
          } else {
            console.log('‚ö†Ô∏è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID');
          }
        } else {
          console.log('‚ö†Ô∏è Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID');
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
      }
    };

    initializeUser();
    setMounted(true);
  }, []);

  // –£–±—Ä–∞–Ω–∞ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  // const scrollToBottom = () => {
  //   messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  // };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || isLoading || !mounted) return;

    // –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ "–æ—á–∏—Å—Ç–∏—Ç—å"
    if (input.trim().toLowerCase() === '–æ—á–∏—Å—Ç–∏—Ç—å' || input.trim().toLowerCase() === 'clear') {
      setMessages([{
        id: '1',
        role: 'assistant',
        content: '–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞! üßπ\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ spor3s! üçÑ –ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –≥—Ä–∏–±–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏:\n\nüß† –î–ª—è –ø–∞–º—è—Ç–∏ –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ ‚Äî –ï–∂–æ–≤–∏–∫\nüò¥ –î–ª—è —Å–Ω–∞ –∏ —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞ ‚Äî –ú—É—Ö–æ–º–æ—Ä\n‚ö° –î–ª—è —ç–Ω–µ—Ä–≥–∏–∏ ‚Äî –ö–æ—Ä–¥–∏—Ü–µ–ø—Å\nüåü –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∫—É—Ä—Å 4 –≤ 1\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤–Ω–∏–∑—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!',
        timestamp: new Date()
      }]);
      setInput("");
      return;
    }

    const userMessage: Message = {
      id: Date.now().toString(),
      role: 'user',
      content: input.trim(),
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput("");
    setIsLoading(true);

    try {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
      const recentMessages = [...messages, userMessage].slice(-10);
      
      const response = await fetch('/api/ai', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          message: input.trim(),
          user_id: userId,
          source: 'mini_app'
        }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      console.log('AI Response:', data); // DEBUG

      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–≤–µ—Ç–∞ - API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç data.response
      let aiContent = '';
      if (data.response) {
        aiContent = data.response;
      } else {
        aiContent = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.";
      }

      // –ü–∞—Ä—Å–∏–º —Ç–µ–≥–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –û–î–ò–ù –†–ê–ó –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞
      const addToCartMatches = [...aiContent.matchAll(/\[add_to_cart:([\w-]+)\]/g)];
      const removeFromCartMatches = [...aiContent.matchAll(/\[remove_from_cart:([\w-]+)\]/g)];
      const uniqueAddProductIds = [...new Set(addToCartMatches.map(m => m[1]))];
      const uniqueRemoveProductIds = [...new Set(removeFromCartMatches.map(m => m[1]))];
      
      console.log('üõí DEBUG: AI Content:', aiContent);
      console.log('üõí DEBUG: Add to cart matches:', addToCartMatches);
      console.log('üõí DEBUG: Unique add product IDs:', uniqueAddProductIds);
      console.log('üõí DEBUG: Available products:', products.map(p => ({ id: p.id, name: p.name })));
      console.log('üîî DEBUG: –ë—É–¥–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', uniqueAddProductIds);

      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É
      uniqueAddProductIds.forEach((productId) => {
        console.log(`üõí DEBUG: –ò—â–µ–º –ø—Ä–æ–¥—É–∫—Ç —Å ID: ${productId}`);
        console.log(`üõí DEBUG: –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:`, products.map(p => ({ id: p.id, name: p.name })));
        const product = products.find(p => p.id === productId);
        console.log(`üõí DEBUG: –ù–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç:`, product);
        if (product) {
          console.log(`üõí DEBUG: –í—ã–∑—ã–≤–∞–µ–º addToCart –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞:`, product);
          addToCart(product);
          console.log(`üõí –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É: ${product.name}`);
          console.log(`üîî –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è: ${product.name}`);

          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
          console.log(`üîî –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞: ${product.name} (ID: ${productId})`);
          const notification = document.createElement('div');
          notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #28a745, #20c997);
            color: white;
            padding: 20px 25px;
            border-radius: 15px;
            font-weight: 700;
            font-size: 16px;
            z-index: 99999;
            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
            animation: slideInRight 0.4s ease-out;
            max-width: 350px;
            word-wrap: break-word;
            border: 2px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
          `;
          notification.innerHTML = `
            <div style="display: flex; align-items: center; gap: 12px;">
              <div style="font-size: 24px;">‚úÖ</div>
              <div>
                <div style="font-weight: 700; margin-bottom: 4px;">${product.name}</div>
                <div style="font-size: 14px; opacity: 0.9;">–î–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!</div>
              </div>
            </div>
          `;
          document.body.appendChild(notification);
          console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ DOM –¥–ª—è: ${product.name}`);
          console.log(`üîç DEBUG: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ DOM:`, notification);
          console.log(`üîç DEBUG: –ü–æ–∑–∏—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:`, notification.style.position, notification.style.top, notification.style.right);
          console.log(`üîç DEBUG: Z-index —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:`, notification.style.zIndex);

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
          try {
            const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIG2m98OScTgwOUarm7blmGgU7k9n1unEiBC13yO/eizEIHWq+8+OWT');
            audio.volume = 0.3;
            audio.play().catch(() => {});
          } catch (e) {}

          // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(() => {
            notification.style.animation = 'slideOutRight 0.4s ease-out';
            setTimeout(() => {
              if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
              }
            }, 400);
          }, 4000);
        }
      });

      // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
      uniqueRemoveProductIds.forEach((productId) => {
        const product = products.find(p => p.id === productId);
        if (product) {
          removeFromCart(productId);
          console.log(`üóëÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: ${product.name}`);

          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
          const notification = document.createElement('div');
          notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #dc3545, #c82333);
            color: white;
            padding: 20px 25px;
            border-radius: 15px;
            font-weight: 700;
            font-size: 16px;
            z-index: 99999;
            box-shadow: 0 8px 25px rgba(220, 53, 69, 0.4);
            animation: slideInRight 0.4s ease-out;
            max-width: 350px;
            word-wrap: break-word;
            border: 2px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
          `;
          notification.innerHTML = `
            <div style="display: flex; align-items: center; gap: 12px;">
              <div style="font-size: 24px;">üóëÔ∏è</div>
              <div>
                <div style="font-weight: 700; margin-bottom: 4px;">${product.name}</div>
                <div style="font-size: 14px; opacity: 0.9;">–£–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã!</div>
              </div>
            </div>
          `;
          document.body.appendChild(notification);

          // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(() => {
            notification.style.animation = 'slideOutRight 0.4s ease-out';
            setTimeout(() => {
              if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
              }
            }, 400);
          }, 4000);
        }
      });

      const aiMessage: Message = {
        id: Date.now().toString(),
        role: 'assistant',
        content: aiContent,
        timestamp: new Date()
      };

      setMessages(prev => [...prev, aiMessage]);

    } catch (error) {
      console.error('Error:', error);
      const errorMessage: Message = {
        id: Date.now().toString(),
        role: 'assistant',
        content: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        timestamp: new Date()
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleAddToCart = (productId: string) => {
    console.log(`üõí DEBUG: handleAddToCart –≤—ã–∑–≤–∞–Ω–∞ —Å productId: ${productId}`);
    console.log(`üõí DEBUG: –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:`, products);
    
    const product = products.find(p => p.id === productId);
    console.log(`üõí DEBUG: –ù–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç:`, product);
    
    if (product) {
      console.log(`üõí DEBUG: –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É:`, product);
      addToCart(product);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
      const notification = document.createElement('div');
      notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, #28a745, #20c997);
        color: white;
        padding: 20px 25px;
        border-radius: 15px;
        font-weight: 700;
        font-size: 16px;
        z-index: 99999;
        box-shadow: 0 8px 25px rgba(40, 167, 69, 0.4);
        animation: slideInRight 0.4s ease-out;
        max-width: 350px;
        word-wrap: break-word;
        border: 2px solid rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
      `;
      notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 12px;">
          <div style="font-size: 24px;">‚úÖ</div>
          <div>
            <div style="font-weight: 700; margin-bottom: 4px;">${product.name}</div>
            <div style="font-size: 14px; opacity: 0.9;">–î–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!</div>
          </div>
        </div>
      `;
      document.body.appendChild(notification);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
      try {
        const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIG2m98OScTgwOUarm7blmGgU7k9n1unEiBC13yO/eizEIHWq+8+OWT');
        audio.volume = 0.3;
        audio.play().catch(() => {});
      } catch (e) {}
      
      // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        notification.style.animation = 'slideOutRight 0.4s ease-out';
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 400);
      }, 4000);
      
      console.log(`üõí –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É: ${product.name}`);
    } else {
      console.error(`‚ùå DEBUG: –ü—Ä–æ–¥—É–∫—Ç —Å ID ${productId} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
      console.error(`‚ùå DEBUG: –î–æ—Å—Ç—É–ø–Ω—ã–µ ID:`, products.map(p => p.id));
    }
  };

  const handleOrderNow = (productId: string) => {
    const product = products.find(p => p.id === productId);
    if (product) {
      addToCart(product);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–∫–∞–∑—É
      const notification = document.createElement('div');
      notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, #ff00cc, #3333ff);
        color: white;
        padding: 20px 25px;
        border-radius: 15px;
        font-weight: 700;
        font-size: 16px;
        z-index: 99999;
        box-shadow: 0 8px 25px rgba(255, 0, 204, 0.4);
        animation: slideInRight 0.4s ease-out;
        max-width: 350px;
        word-wrap: break-word;
        border: 2px solid rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
      `;
      notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 12px;">
          <div style="font-size: 24px;">‚ö°</div>
          <div>
            <div style="font-weight: 700; margin-bottom: 4px;">${product.name}</div>
            <div style="font-size: 14px; opacity: 0.9;">–î–æ–±–∞–≤–ª–µ–Ω! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–∫–∞–∑—É...</div>
          </div>
        </div>
      `;
      document.body.appendChild(notification);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
      try {
        const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIG2m98OScTgwOUarm7blmGgU7k9n1unEiBC13yO/eizEIHWq+8+OWT');
        audio.volume = 0.3;
        audio.play().catch(() => {});
      } catch (e) {}
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => {
        if (setStep) setStep(3);
        
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 2000);
      }, 1500);
      
      console.log(`‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–∫–∞–∑: ${product.name}`);
    }
  };

  const renderMessage = (message: Message) => {
    const isUser = message.role === 'user';
    let content = message.content;

    // –ü–∞—Ä—Å–∏–º action-–∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è AI —Å–æ–æ–±—â–µ–Ω–∏–π
    if (!isUser) {
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
      const addToCartMatches = [...content.matchAll(/\[add_to_cart:([\w-]+)\]/g)];
      const removeFromCartMatches = [...content.matchAll(/\[remove_from_cart:([\w-]+)\]/g)];
      const orderNowMatches = [...content.matchAll(/\[order_now:([\w-]+)\]/g)];
      const showInfoMatches = [...content.matchAll(/\[show_info:([\w-]+)\]/g)];

      console.log('üîç DEBUG: –ü–∞—Ä—Å–∏–Ω–≥ AI —Å–æ–æ–±—â–µ–Ω–∏—è:', { 
        content: content.substring(0, 200) + '...',
        addToCartMatches: addToCartMatches.map(m => m[1]), 
        removeFromCartMatches: removeFromCartMatches.map(m => m[1]),
        orderNowMatches: orderNowMatches.map(m => m[1]),
        showInfoMatches: showInfoMatches.map(m => m[1]),
        productsAvailable: products.map(p => ({ id: p.id, name: p.name }))
      }); // DEBUG

      // –£–±–∏—Ä–∞–µ–º –º–∞—Ä–∫–µ—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      content = content
        .replace(/\[add_to_cart:[\w-]+\]/g, '')
        .replace(/\[remove_from_cart:[\w-]+\]/g, '')
        .replace(/\[order_now:[\w-]+\]/g, '')
        .replace(/\[show_info:[\w-]+\]/g, '')
        .trim();

      console.log('üßπ DEBUG: –û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', content);

      return (
        <div key={message.id} style={{ marginBottom: 20 }}>
          <div style={{
            background: "#2a2a5a",
            padding: 15,
            borderRadius: 12,
            maxWidth: "80%",
            marginLeft: 0,
            border: "1px solid rgba(255, 255, 255, 0.1)"
          }}>
            <div style={{ color: "#fff", lineHeight: 1.5 }}>
              {content.split('\n').map((line, i) => (
                <p key={i} style={{ margin: i === 0 ? 0 : '10px 0 0 0' }}>{line}</p>
              ))}
            </div>

            {/* –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ - —Ç–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ */}
            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–∫–∞–∑–∞ */}
            {(removeFromCartMatches.length > 0 || orderNowMatches.length > 0 || showInfoMatches.length > 0) && (
              <div style={{ marginTop: 15, display: 'flex', flexWrap: 'wrap', gap: 10 }}>
                {/* –ö–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã */}
                {removeFromCartMatches.map((m, i) => {
                  const productId = m[1];
                  const product = products.find(p => p.id === productId);
                  console.log(`üîç DEBUG: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è ${productId}:`, product);
                  return (
                    <button
                      key={`remove-${i}`}
                      onClick={() => {
                        console.log(`‚ùå DEBUG: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è ${productId}`);
                        removeFromCart(productId);
                      }}
                      style={{
                        background: "linear-gradient(45deg, #dc3545, #c82333)",
                        color: "white",
                        border: "none",
                        borderRadius: "20px",
                        padding: "8px 16px",
                        fontSize: "14px",
                        cursor: "pointer",
                        transition: "background 0.2s"
                      }}
                    >
                      ‚ùå –£–¥–∞–ª–∏—Ç—å {product?.name || productId}
                    </button>
                  );
                })}
                
                {/* –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–∫–∞–∑–∞ */}
                {orderNowMatches.map((m, i) => {
                  const productId = m[1];
                  const product = products.find(p => p.id === productId);
                  console.log(`üîç DEBUG: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è ${productId}:`, product);
                  return (
                    <button
                      key={`order-${i}`}
                      onClick={() => {
                        console.log(`‚ö° DEBUG: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è ${productId}`);
                        handleOrderNow(productId);
                      }}
                      style={{
                        background: "linear-gradient(45deg, #ff00cc, #3333ff)",
                        color: "white",
                        border: "none",
                        borderRadius: "20px",
                        padding: "8px 16px",
                        fontSize: "14px",
                        cursor: "pointer",
                        transition: "background 0.2s"
                      }}
                    >
                      ‚ö° –ó–∞–∫–∞–∑–∞—Ç—å {product?.name || productId}
                    </button>
                  );
                })}
                
                {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ */}
                {showInfoMatches.map((m, i) => {
                  const productId = m[1];
                  const product = products.find(p => p.id === productId);
                  console.log(`üîç DEBUG: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è ${productId}:`, product);
                  return (
                    <button
                      key={`info-${i}`}
                      onClick={() => {
                        console.log(`‚ÑπÔ∏è DEBUG: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è ${productId}`);
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥—É–∫—Ç–µ
                        const infoMessage = `‚ÑπÔ∏è **${product?.name || productId}**\n\n–¶–µ–Ω–∞: ${product?.price || 'N/A'}‚ÇΩ\n–û–ø–∏—Å–∞–Ω–∏–µ: ${product?.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}`;
                        setMessages(prev => [...prev, {
                          id: Date.now().toString(),
                          role: 'assistant',
                          content: infoMessage,
                          timestamp: new Date()
                        }]);
                      }}
                      style={{
                        background: "linear-gradient(45deg, #17a2b8, #138496)",
                        color: "white",
                        border: "none",
                        borderRadius: "20px",
                        padding: "8px 16px",
                        fontSize: "14px",
                        cursor: "pointer",
                        transition: "background 0.2s"
                      }}
                    >
                      ‚ÑπÔ∏è –ò–Ω—Ñ–æ {product?.name || productId}
                    </button>
                  );
                })}
              </div>
            )}
          </div>
        </div>
      );
    }

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    return (
      <div key={message.id} style={{ marginBottom: 20, display: 'flex', justifyContent: 'flex-end' }}>
        <div style={{
          background: "#ff00cc",
          color: "white",
          padding: 12,
          borderRadius: 12,
          maxWidth: "70%",
          marginRight: 0
        }}>
          {content}
        </div>
      </div>
    );
  };

  if (!mounted) {
    return null;
  }

          return (
    <>
      <style jsx global>{`
        @keyframes slideInRight {
          from {
            transform: translateX(100%);
            opacity: 0;
          }
          to {
            transform: translateX(0);
            opacity: 1;
          }
        }
        
        @keyframes slideOutRight {
          from {
            transform: translateX(0);
            opacity: 1;
          }
          to {
            transform: translateX(100%);
            opacity: 0;
          }
        }
      `}</style>
      <div style={{ 
        maxWidth: 800, 
        margin: "0 auto",
        display: "flex",
        flexDirection: "column",
        gap: 20,
        width: "100%",
        alignItems: "center"
      }}>
      {/* –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç */}
      <div style={{ 
        height: "clamp(400px, 60vh, 500px)",
        display: "flex",
        flexDirection: "column",
        background: "rgba(255, 255, 255, 0.05)",
        borderRadius: 12,
        overflow: "hidden",
        width: "100%",
        maxWidth: "700px"
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
        <div style={{ 
          padding: "clamp(10px, 2vw, 15px)", 
          background: "rgba(255, 255, 255, 0.1)", 
          borderBottom: "1px solid rgba(255, 255, 255, 0.1)",
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          flexWrap: "wrap",
          gap: "10px"
        }}>
          <h3 style={{ 
            margin: 0, 
            color: "#fff",
            fontSize: "clamp(16px, 4vw, 18px)"
          }}>
            ü§ñ AI –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
          </h3>
          <div style={{ 
            fontSize: "clamp(10px, 2.5vw, 12px)", 
            color: "#ffffff",
            display: "flex",
            gap: 10,
            alignItems: "center",
            flexWrap: "wrap",
            textShadow: "0 1px 2px rgba(0,0,0,0.3)"
          }}>
            <span>üí¨ {messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π</span>
            <button
              onClick={() => {
                setMessages([{
                  id: '1',
                  role: 'assistant',
                  content: '–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞! üßπ\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ spor3s! üçÑ –ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å –≥—Ä–∏–±–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏:\n\nüß† –î–ª—è –ø–∞–º—è—Ç–∏ –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ ‚Äî –ï–∂–æ–≤–∏–∫\nüò¥ –î–ª—è —Å–Ω–∞ –∏ —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞ ‚Äî –ú—É—Ö–æ–º–æ—Ä\n‚ö° –î–ª—è —ç–Ω–µ—Ä–≥–∏–∏ ‚Äî –ö–æ—Ä–¥–∏—Ü–µ–ø—Å\nüåü –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∫—É—Ä—Å 4 –≤ 1\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤–Ω–∏–∑—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç!',
                  timestamp: new Date()
                }]);
              }}
              style={{
                background: "rgba(255, 107, 107, 0.2)",
                border: "1px solid rgba(255, 107, 107, 0.3)",
                borderRadius: 4,
                padding: "4px 8px",
                color: "#ff6b6b",
                fontSize: "clamp(8px, 2vw, 10px)",
                cursor: "pointer",
                transition: "all 0.2s"
              }}
              onMouseOver={(e) => {
                const target = e.currentTarget as HTMLButtonElement;
                target.style.background = "rgba(255, 107, 107, 0.3)";
              }}
              onMouseOut={(e) => {
                const target = e.currentTarget as HTMLButtonElement;
                target.style.background = "rgba(255, 107, 107, 0.2)";
              }}
            >
              üßπ –û—á–∏—Å—Ç–∏—Ç—å
            </button>
          </div>
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
        <div style={{ 
          flex: 1, 
          padding: "clamp(10px, 2vw, 15px)", 
          overflowY: "auto",
          display: "flex",
          flexDirection: "column"
        }}>
          {messages.map(renderMessage)}
          
          {isLoading && (
            <div style={{ 
              background: "#2a2a5a",
              padding: "clamp(10px, 2vw, 15px)",
              borderRadius: 12,
              maxWidth: "80%",
              marginLeft: 0,
              border: "1px solid rgba(255, 255, 255, 0.1)"
            }}>
              <div style={{ color: "#ffffff", textShadow: "0 1px 2px rgba(0,0,0,0.3)" }}>
                AI –ø–µ—á–∞—Ç–∞–µ—Ç... ‚è≥
              </div>
            </div>
          )}
          
        <div ref={messagesEndRef} />
      </div>

        {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
        <form onSubmit={handleSubmit} style={{ 
          padding: 15, 
          borderTop: "1px solid rgba(255, 255, 255, 0.1)",
          display: "flex",
          gap: 10
        }}>
        <input
          type="text"
          value={input}
            onChange={(e) => setInput(e.target.value)}
            placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –≥—Ä–∏–±–Ω—ã—Ö –¥–æ–±–∞–≤–∫–∞—Ö... (–Ω–∞–ø–∏—à–∏—Ç–µ '–æ—á–∏—Å—Ç–∏—Ç—å' –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏)"
            disabled={isLoading}
            style={{
              flex: 1,
              padding: 12,
              borderRadius: 8,
              border: "1px solid rgba(255, 255, 255, 0.2)",
              background: "rgba(255, 255, 255, 0.1)",
              color: "#fff",
              fontSize: 14
            }}
            onFocus={(e) => {
              const target = e.currentTarget as HTMLInputElement;
              target.style.outline = "none";
              target.style.borderColor = "rgba(255, 255, 255, 0.5)";
            }}
            onBlur={(e) => {
              const target = e.currentTarget as HTMLInputElement;
              target.style.borderColor = "rgba(255, 255, 255, 0.2)";
            }}
          />
          <button
            type="submit"
            disabled={isLoading || !input.trim()}
            style={{
              padding: "12px 20px",
              background: isLoading ? "#666" : "#ff00cc",
              color: "white",
              border: "none",
              borderRadius: 8,
              cursor: isLoading ? "not-allowed" : "pointer",
              fontSize: 14,
              fontWeight: "bold"
            }}
          >
            {isLoading ? "‚è≥" : "üì§"}
        </button>
      </form>
      </div>

      {/* –ú–µ–Ω—é –≤–∏—Ç—Ä–∏–Ω—ã –ø–æ—Å–ª–µ —á–∞—Ç–∞ */}
      <div style={{
        background: "rgba(255, 255, 255, 0.08)",
        borderRadius: 12,
        padding: 20,
        border: "1px solid rgba(255, 255, 255, 0.1)"
      }}>
        <h3 style={{ 
          color: "#fff", 
          textAlign: "center", 
          marginBottom: 20,
          fontSize: 18,
          fontWeight: 600
        }}>
          üõçÔ∏è –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ç–æ–≤–∞—Ä–∞–º
        </h3>
        
        <div style={{ 
          display: "grid", 
          gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))", 
          gap: 15,
          marginBottom: 20
        }}>
          {products.slice(0, 4).map(product => (
            <div 
              key={product.id} 
              style={{
                background: "rgba(255, 255, 255, 0.15)",
                borderRadius: 12,
                padding: 15,
                display: "flex",
                alignItems: "center",
                gap: 12,
                cursor: "pointer",
                transition: "transform 0.2s, box-shadow 0.2s",
                color: "#fff",
                border: "1px solid rgba(255, 255, 255, 0.2)"
              }}
              onMouseOver={(e) => {
                e.currentTarget.style.transform = "translateY(-3px)";
                e.currentTarget.style.boxShadow = "0 6px 20px rgba(0,0,0,0.3)";
                e.currentTarget.style.background = "rgba(255, 255, 255, 0.25)";
              }}
              onMouseOut={(e) => {
                e.currentTarget.style.transform = "translateY(0)";
                e.currentTarget.style.boxShadow = "none";
                e.currentTarget.style.background = "rgba(255, 255, 255, 0.15)";
              }}
              onClick={() => handleAddToCart(product.id)}
            >
              <div style={{ 
                width: 50, 
                height: 50, 
                borderRadius: 8, 
                overflow: "hidden",
                background: "#f0f0f0",
                display: "flex",
                alignItems: "center",
                justifyContent: "center"
              }}>
                {product.image ? (
                  <img 
                    src={product.image} 
                    alt={product.name}
                    style={{ width: "100%", height: "100%", objectFit: "cover" }}
                    onError={(e) => {
                      const target = e.target as HTMLImageElement;
                      target.style.display = 'none';
                      if (target.parentNode) {
                        (target.parentNode as HTMLElement).innerHTML = '<div style="font-size: 20px;">üçÑ</div>';
                      }
                    }}
                  />
                ) : (
                  <div style={{ fontSize: 20 }}>üçÑ</div>
                )}
              </div>
              <div style={{ flex: 1 }}>
                <div style={{ fontWeight: 600, fontSize: 14, marginBottom: 3 }}>
                  {product.name}
                </div>
                <div style={{ color: "#ff00cc", fontWeight: 700, fontSize: 16 }}>
                  {product.price}‚ÇΩ
                </div>
              </div>
              <div style={{ 
                background: "#ff00cc", 
                color: "white", 
                borderRadius: "50%", 
                width: 30, 
                height: 30,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                fontSize: 16,
                fontWeight: "bold"
              }}>
                +
              </div>
            </div>
          ))}
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ */}
        <div style={{ 
          display: "flex", 
          gap: 12, 
          justifyContent: "center",
          flexWrap: "wrap"
        }}>
          <button
            onClick={() => setStep && setStep(2)}
            style={{
              background: "linear-gradient(45deg, #ff00cc, #3333ff)",
              color: "white",
              border: "none",
              borderRadius: 20,
              padding: "10px 20px",
              fontSize: 14,
              fontWeight: 600,
              cursor: "pointer",
              display: "flex",
              alignItems: "center",
              gap: 8,
              transition: "transform 0.2s"
            }}
            onMouseOver={(e) => {
              (e.target as HTMLButtonElement).style.transform = "scale(1.05)";
            }}
            onMouseOut={(e) => {
              (e.target as HTMLButtonElement).style.transform = "scale(1)";
            }}
          >
            üõí –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
          </button>
          
          <button
            onClick={() => {
              const popularProducts = ['4v1']; // –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å 4–≤1 –Ω–∞ –º–µ—Å—è—Ü
              popularProducts.forEach(id => {
                const product = products.find(p => p.id === id);
                if (product) handleAddToCart(id);
              });
            }}
            style={{
              background: "rgba(255, 255, 255, 0.15)",
              color: "#fff",
              border: "1px solid rgba(255, 255, 255, 0.3)",
              borderRadius: 20,
              padding: "10px 20px",
              fontSize: 14,
              fontWeight: 600,
              cursor: "pointer",
              display: "flex",
              alignItems: "center",
              gap: 8,
              transition: "all 0.2s"
            }}
            onMouseOver={(e) => {
              const target = e.target as HTMLButtonElement;
              target.style.background = "rgba(255, 255, 255, 0.25)";
              target.style.transform = "scale(1.05)";
            }}
            onMouseOut={(e) => {
              const target = e.target as HTMLButtonElement;
              target.style.background = "rgba(255, 255, 255, 0.15)";
              target.style.transform = "scale(1)";
            }}
          >
            ‚≠ê –î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å 4–≤1
          </button>
        </div>
      </div>
    </div>
    </>
  );
}